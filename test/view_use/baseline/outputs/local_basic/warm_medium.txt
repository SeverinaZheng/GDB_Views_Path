baseline V14_2 MATCH p=(n:User)-[:POSTED]-(po:Post)-[:HAS_TAG]-(t:Tag)-[:HAS_TAG]-(po2:Post)-[:POSTED]-(n) WHERE t.tagId = 'java' OR t.tagId = 'c#' RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post)-[:HAS_TAG]-(t:Tag)-[:HAS_TAG]-(po2:Post)-[:POSTED]-(n) WHERE t.tagId = 'java' OR t.tagId = 'c#' RETURN p
Execution done
Node size is 172792
Edge size is 312509
Took 48784 ms to execute baseline query
Baseline returned 485301 nodes (or edges)
*********************************
baseline V2_2 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 RETURN n
Executing query: MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 RETURN n
Execution done
Node size is 718883
Edge size is 0
Took 3690 ms to execute baseline query
Baseline returned 718883 nodes (or edges)
*********************************
baseline V3_1 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN po
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN po
Execution done
Node size is 253189
Edge size is 0
Took 370 ms to execute baseline query
Baseline returned 253189 nodes (or edges)
*********************************
baseline V7_2 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN m
Executing query: MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN m
Execution done
Node size is 57905
Edge size is 0
Took 15801 ms to execute baseline query
Baseline returned 57905 nodes (or edges)
*********************************
baseline V4_1 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN n
Executing query: MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN n
Execution done
Node size is 21463
Edge size is 0
Took 2279 ms to execute baseline query
Baseline returned 21463 nodes (or edges)
*********************************
baseline V1_1 MATCH (n: User) WHERE n.upvotes > 1000 RETURN n
Executing query: MATCH (n: User) WHERE n.upvotes > 1000 RETURN n
Execution done
Node size is 5139
Edge size is 0
Took 74 ms to execute baseline query
Baseline returned 5139 nodes (or edges)
*********************************
baseline V8_2 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN p
Execution done
Node size is 138116
Edge size is 111876
Took 3720 ms to execute baseline query
Baseline returned 249992 nodes (or edges)
*********************************
baseline V4_2 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN m
Executing query: MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN m
Execution done
Node size is 7367
Edge size is 0
Took 2628 ms to execute baseline query
Baseline returned 7367 nodes (or edges)
*********************************
baseline V6_1 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
Executing query: MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
Execution done
Node size is 59909
Edge size is 0
Took 11391 ms to execute baseline query
Baseline returned 59909 nodes (or edges)
*********************************
baseline V14_1 MATCH p=(n:User)-[:POSTED]-(po:Post)-[:HAS_TAG]-(t:Tag)-[:HAS_TAG]-(po2:Post)-[:POSTED]-(n) WHERE t.tagId = 'java' RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post)-[:HAS_TAG]-(t:Tag)-[:HAS_TAG]-(po2:Post)-[:POSTED]-(n) WHERE t.tagId = 'java' RETURN p
Execution done
Node size is 62687
Edge size is 110960
Took 9645 ms to execute baseline query
Baseline returned 173647 nodes (or edges)
*********************************
baseline V2_1 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 RETURN n
Executing query: MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 RETURN n
Execution done
Node size is 367709
Edge size is 0
Took 2917 ms to execute baseline query
Baseline returned 367709 nodes (or edges)
*********************************
baseline V7_1 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN m
Executing query: MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN m
Execution done
Node size is 77209
Edge size is 0
Took 14544 ms to execute baseline query
Baseline returned 77209 nodes (or edges)
*********************************
baseline V3_2 MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN po
Executing query: MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN po
Execution done
Node size is 111876
Edge size is 0
Took 3522 ms to execute baseline query
Baseline returned 111876 nodes (or edges)
*********************************
baseline V10 MATCH p=(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Executing query: MATCH p=(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Execution done
Node size is 3624699
Edge size is 2207384
Took 18440 ms to execute baseline query
Baseline returned 5832083 nodes (or edges)
*********************************
baseline V12_1 MATCH p=(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN p
Execution done
Node size is 1460732
Edge size is 2274209
Took 24042 ms to execute baseline query
Baseline returned 3734941 nodes (or edges)
*********************************
baseline V1_2 MATCH (n: User) WHERE n.upvotes > 400 RETURN n
Executing query: MATCH (n: User) WHERE n.upvotes > 400 RETURN n
Execution done
Node size is 12036
Edge size is 0
Took 60 ms to execute baseline query
Baseline returned 12036 nodes (or edges)
*********************************
baseline V8_1 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN p
Execution done
Node size is 301332
Edge size is 253189
Took 777 ms to execute baseline query
Baseline returned 554521 nodes (or edges)
*********************************
baseline V12_2 MATCH p=(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN p
Execution done
Node size is 1014730
Edge size is 1544095
Took 19806 ms to execute baseline query
Baseline returned 2558825 nodes (or edges)
*********************************
baseline V11_1 MATCH p=(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]->(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]->(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Execution done
Node size is 874164
Edge size is 824709
Took 10176 ms to execute baseline query
Baseline returned 1698873 nodes (or edges)
*********************************
baseline V5 MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN betterPost
Executing query: MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN betterPost
Execution done
Node size is 1719664
Edge size is 0
Took 14227 ms to execute baseline query
Baseline returned 1719664 nodes (or edges)
*********************************
baseline V6_2 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
Executing query: MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
Execution done
Node size is 25959
Edge size is 0
Took 887 ms to execute baseline query
Baseline returned 25959 nodes (or edges)
*********************************
baseline V9_1 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN p
Executing query: MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN p
Execution done
Node size is 21463
Edge size is 12094
Took 2312 ms to execute baseline query
Baseline returned 33557 nodes (or edges)
*********************************
baseline V11_2 MATCH p=(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]->(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]->(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Execution done
Node size is 123738
Edge size is 103050
Took 1057 ms to execute baseline query
Baseline returned 226788 nodes (or edges)
*********************************
baseline V7_1 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN m
Executing query: MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN m
Execution done
Node size is 77209
Edge size is 0
Took 17967 ms to execute baseline query
Baseline returned 77209 nodes (or edges)
*********************************
baseline V4_1 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN n
Executing query: MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN n
Execution done
Node size is 21463
Edge size is 0
Took 2160 ms to execute baseline query
Baseline returned 21463 nodes (or edges)
*********************************
baseline V10 MATCH p=(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Executing query: MATCH p=(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Execution done
Node size is 3624699
Edge size is 2207384
Took 19253 ms to execute baseline query
Baseline returned 5832083 nodes (or edges)
*********************************
baseline V1_1 MATCH (n: User) WHERE n.upvotes > 1000 RETURN n
Executing query: MATCH (n: User) WHERE n.upvotes > 1000 RETURN n
Execution done
Node size is 5139
Edge size is 0
Took 47 ms to execute baseline query
Baseline returned 5139 nodes (or edges)
*********************************
baseline V9_2 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN p
Executing query: MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN p
Execution done
Node size is 26418
Edge size is 20003
Took 2739 ms to execute baseline query
Baseline returned 46421 nodes (or edges)
*********************************
baseline V14_1 MATCH p=(n:User)-[:POSTED]-(po:Post)-[:HAS_TAG]-(t:Tag)-[:HAS_TAG]-(po2:Post)-[:POSTED]-(n) WHERE t.tagId = 'java' RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post)-[:HAS_TAG]-(t:Tag)-[:HAS_TAG]-(po2:Post)-[:POSTED]-(n) WHERE t.tagId = 'java' RETURN p
Execution done
Node size is 62687
Edge size is 110960
Took 9534 ms to execute baseline query
Baseline returned 173647 nodes (or edges)
*********************************
baseline V11_1 MATCH p=(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]->(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]->(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Execution done
Node size is 874164
Edge size is 824709
Took 10237 ms to execute baseline query
Baseline returned 1698873 nodes (or edges)
*********************************
baseline V12_1 MATCH p=(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN p
Execution done
Node size is 1460732
Edge size is 2274209
Took 25318 ms to execute baseline query
Baseline returned 3734941 nodes (or edges)
*********************************
baseline V2_1 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 RETURN n
Executing query: MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 RETURN n
Execution done
Node size is 367709
Edge size is 0
Took 3202 ms to execute baseline query
Baseline returned 367709 nodes (or edges)
*********************************
baseline V7_2 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN m
Executing query: MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN m
Execution done
Node size is 57905
Edge size is 0
Took 15135 ms to execute baseline query
Baseline returned 57905 nodes (or edges)
*********************************
baseline V9_2 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN p
Executing query: MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN p
Execution done
Node size is 26418
Edge size is 20003
Took 2589 ms to execute baseline query
Baseline returned 46421 nodes (or edges)
*********************************
baseline V5 MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN betterPost
Executing query: MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN betterPost
Execution done
Node size is 1719664
Edge size is 0
Took 14227 ms to execute baseline query
Baseline returned 1719664 nodes (or edges)
*********************************
baseline V6_2 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
Executing query: MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
Execution done
Node size is 25959
Edge size is 0
Took 847 ms to execute baseline query
Baseline returned 25959 nodes (or edges)
*********************************
baseline V4_2 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN m
Executing query: MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN m
Execution done
Node size is 7367
Edge size is 0
Took 2651 ms to execute baseline query
Baseline returned 7367 nodes (or edges)
*********************************
baseline V8_1 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN p
Execution done
Node size is 301332
Edge size is 253189
Took 630 ms to execute baseline query
Baseline returned 554521 nodes (or edges)
*********************************
baseline V12_2 MATCH p=(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN p
Execution done
Node size is 1014730
Edge size is 1544095
Took 21036 ms to execute baseline query
Baseline returned 2558825 nodes (or edges)
*********************************
baseline V9_1 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN p
Executing query: MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN p
Execution done
Node size is 21463
Edge size is 12094
Took 2424 ms to execute baseline query
Baseline returned 33557 nodes (or edges)
*********************************
baseline V3_2 MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN po
Executing query: MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN po
Execution done
Node size is 111876
Edge size is 0
Took 3599 ms to execute baseline query
Baseline returned 111876 nodes (or edges)
*********************************
baseline V3_1 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN po
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN po
Execution done
Node size is 253189
Edge size is 0
Took 318 ms to execute baseline query
Baseline returned 253189 nodes (or edges)
*********************************
baseline V6_1 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
Executing query: MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
Execution done
Node size is 59909
Edge size is 0
Took 12413 ms to execute baseline query
Baseline returned 59909 nodes (or edges)
*********************************
baseline V8_2 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN p
Execution done
Node size is 138116
Edge size is 111876
Took 3700 ms to execute baseline query
Baseline returned 249992 nodes (or edges)
*********************************
baseline V11_2 MATCH p=(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]->(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]->(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Execution done
Node size is 123738
Edge size is 103050
Took 1067 ms to execute baseline query
Baseline returned 226788 nodes (or edges)
*********************************
baseline V2_2 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 RETURN n
Executing query: MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 RETURN n
Execution done
Node size is 718883
Edge size is 0
Took 3490 ms to execute baseline query
Baseline returned 718883 nodes (or edges)
*********************************
baseline V14_2 MATCH p=(n:User)-[:POSTED]-(po:Post)-[:HAS_TAG]-(t:Tag)-[:HAS_TAG]-(po2:Post)-[:POSTED]-(n) WHERE t.tagId = 'java' OR t.tagId = 'c#' RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post)-[:HAS_TAG]-(t:Tag)-[:HAS_TAG]-(po2:Post)-[:POSTED]-(n) WHERE t.tagId = 'java' OR t.tagId = 'c#' RETURN p
Execution done
Node size is 172792
Edge size is 312509
Took 32982 ms to execute baseline query
Baseline returned 485301 nodes (or edges)
*********************************
baseline V1_2 MATCH (n: User) WHERE n.upvotes > 400 RETURN n
Executing query: MATCH (n: User) WHERE n.upvotes > 400 RETURN n
Execution done
Node size is 12036
Edge size is 0
Took 49 ms to execute baseline query
Baseline returned 12036 nodes (or edges)
*********************************
baseline V4_2 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN m
Executing query: MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN m
Execution done
Node size is 7367
Edge size is 0
Took 2561 ms to execute baseline query
Baseline returned 7367 nodes (or edges)
*********************************
baseline V9_1 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN p
Executing query: MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN p
Execution done
Node size is 21463
Edge size is 12094
Took 2176 ms to execute baseline query
Baseline returned 33557 nodes (or edges)
*********************************
baseline V2_1 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 RETURN n
Executing query: MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 RETURN n
Execution done
Node size is 367709
Edge size is 0
Took 3229 ms to execute baseline query
Baseline returned 367709 nodes (or edges)
*********************************
baseline V7_2 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN m
Executing query: MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN m
Execution done
Node size is 57905
Edge size is 0
Took 15629 ms to execute baseline query
Baseline returned 57905 nodes (or edges)
*********************************
baseline V12_1 MATCH p=(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN p
Execution done
Node size is 1460732
Edge size is 2274209
Took 24599 ms to execute baseline query
Baseline returned 3734941 nodes (or edges)
*********************************
baseline V6_1 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
Executing query: MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
Execution done
Node size is 59909
Edge size is 0
Took 11594 ms to execute baseline query
Baseline returned 59909 nodes (or edges)
*********************************
baseline V7_1 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN m
Executing query: MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN m
Execution done
Node size is 77209
Edge size is 0
Took 15164 ms to execute baseline query
Baseline returned 77209 nodes (or edges)
*********************************
baseline V6_2 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
Executing query: MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
Execution done
Node size is 25959
Edge size is 0
Took 822 ms to execute baseline query
Baseline returned 25959 nodes (or edges)
*********************************
baseline V3_1 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN po
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN po
Execution done
Node size is 253189
Edge size is 0
Took 297 ms to execute baseline query
Baseline returned 253189 nodes (or edges)
*********************************
baseline V11_2 MATCH p=(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]->(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]->(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Execution done
Node size is 123738
Edge size is 103050
Took 1113 ms to execute baseline query
Baseline returned 226788 nodes (or edges)
*********************************
baseline V3_2 MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN po
Executing query: MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN po
Execution done
Node size is 111876
Edge size is 0
Took 3430 ms to execute baseline query
Baseline returned 111876 nodes (or edges)
*********************************
baseline V8_1 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN p
Execution done
Node size is 301332
Edge size is 253189
Took 707 ms to execute baseline query
Baseline returned 554521 nodes (or edges)
*********************************
baseline V4_1 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN n
Executing query: MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN n
Execution done
Node size is 21463
Edge size is 0
Took 2211 ms to execute baseline query
Baseline returned 21463 nodes (or edges)
*********************************
baseline V14_2 MATCH p=(n:User)-[:POSTED]-(po:Post)-[:HAS_TAG]-(t:Tag)-[:HAS_TAG]-(po2:Post)-[:POSTED]-(n) WHERE t.tagId = 'java' OR t.tagId = 'c#' RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post)-[:HAS_TAG]-(t:Tag)-[:HAS_TAG]-(po2:Post)-[:POSTED]-(n) WHERE t.tagId = 'java' OR t.tagId = 'c#' RETURN p
Execution done
Node size is 172792
Edge size is 312509
Took 32116 ms to execute baseline query
Baseline returned 485301 nodes (or edges)
*********************************
baseline V9_2 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN p
Executing query: MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN p
Execution done
Node size is 26418
Edge size is 20003
Took 2545 ms to execute baseline query
Baseline returned 46421 nodes (or edges)
*********************************
baseline V10 MATCH p=(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Executing query: MATCH p=(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Execution done
Node size is 3624699
Edge size is 2207384
Took 17928 ms to execute baseline query
Baseline returned 5832083 nodes (or edges)
*********************************
baseline V8_2 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN p
Execution done
Node size is 138116
Edge size is 111876
Took 3725 ms to execute baseline query
Baseline returned 249992 nodes (or edges)
*********************************
baseline V2_2 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 RETURN n
Executing query: MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 RETURN n
Execution done
Node size is 718883
Edge size is 0
Took 3169 ms to execute baseline query
Baseline returned 718883 nodes (or edges)
*********************************
baseline V1_1 MATCH (n: User) WHERE n.upvotes > 1000 RETURN n
Executing query: MATCH (n: User) WHERE n.upvotes > 1000 RETURN n
Execution done
Node size is 5139
Edge size is 0
Took 47 ms to execute baseline query
Baseline returned 5139 nodes (or edges)
*********************************
baseline V14_1 MATCH p=(n:User)-[:POSTED]-(po:Post)-[:HAS_TAG]-(t:Tag)-[:HAS_TAG]-(po2:Post)-[:POSTED]-(n) WHERE t.tagId = 'java' RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post)-[:HAS_TAG]-(t:Tag)-[:HAS_TAG]-(po2:Post)-[:POSTED]-(n) WHERE t.tagId = 'java' RETURN p
Execution done
Node size is 62687
Edge size is 110960
Took 9514 ms to execute baseline query
Baseline returned 173647 nodes (or edges)
*********************************
baseline V11_1 MATCH p=(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]->(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]->(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Execution done
Node size is 874164
Edge size is 824709
Took 10023 ms to execute baseline query
Baseline returned 1698873 nodes (or edges)
*********************************
baseline V5 MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN betterPost
Executing query: MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN betterPost
Execution done
Node size is 1719664
Edge size is 0
Took 14303 ms to execute baseline query
Baseline returned 1719664 nodes (or edges)
*********************************
baseline V12_2 MATCH p=(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN p
Execution done
Node size is 1014730
Edge size is 1544095
Took 20168 ms to execute baseline query
Baseline returned 2558825 nodes (or edges)
*********************************
baseline V11_1 MATCH p=(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]->(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]->(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Execution done
Node size is 874164
Edge size is 824709
Took 10499 ms to execute baseline query
Baseline returned 1698873 nodes (or edges)
*********************************
baseline V1_2 MATCH (n: User) WHERE n.upvotes > 400 RETURN n
Executing query: MATCH (n: User) WHERE n.upvotes > 400 RETURN n
Execution done
Node size is 12036
Edge size is 0
Took 103 ms to execute baseline query
Baseline returned 12036 nodes (or edges)
*********************************
baseline V2_2 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 RETURN n
Executing query: MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 RETURN n
Execution done
Node size is 718883
Edge size is 0
Took 3429 ms to execute baseline query
Baseline returned 718883 nodes (or edges)
*********************************
baseline V8_2 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN p
Execution done
Node size is 138116
Edge size is 111876
Took 3714 ms to execute baseline query
Baseline returned 249992 nodes (or edges)
*********************************
baseline V12_1 MATCH p=(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN p
Execution done
Node size is 1460732
Edge size is 2274209
Took 24904 ms to execute baseline query
Baseline returned 3734941 nodes (or edges)
*********************************
baseline V7_2 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN m
Executing query: MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN m
Execution done
Node size is 57905
Edge size is 0
Took 15882 ms to execute baseline query
Baseline returned 57905 nodes (or edges)
*********************************
baseline V8_1 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN p
Execution done
Node size is 301332
Edge size is 253189
Took 740 ms to execute baseline query
Baseline returned 554521 nodes (or edges)
*********************************
baseline V12_2 MATCH p=(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN p
Execution done
Node size is 1014730
Edge size is 1544095
Took 20435 ms to execute baseline query
Baseline returned 2558825 nodes (or edges)
*********************************
baseline V4_2 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN m
Executing query: MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN m
Execution done
Node size is 7367
Edge size is 0
Took 2821 ms to execute baseline query
Baseline returned 7367 nodes (or edges)
*********************************
baseline V14_1 MATCH p=(n:User)-[:POSTED]-(po:Post)-[:HAS_TAG]-(t:Tag)-[:HAS_TAG]-(po2:Post)-[:POSTED]-(n) WHERE t.tagId = 'java' RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post)-[:HAS_TAG]-(t:Tag)-[:HAS_TAG]-(po2:Post)-[:POSTED]-(n) WHERE t.tagId = 'java' RETURN p
Execution done
Node size is 62687
Edge size is 110960
Took 9634 ms to execute baseline query
Baseline returned 173647 nodes (or edges)
*********************************
baseline V10 MATCH p=(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Executing query: MATCH p=(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Execution done
Node size is 3624699
Edge size is 2207384
Took 19022 ms to execute baseline query
Baseline returned 5832083 nodes (or edges)
*********************************
baseline V6_2 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
Executing query: MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
Execution done
Node size is 25959
Edge size is 0
Took 871 ms to execute baseline query
Baseline returned 25959 nodes (or edges)
*********************************
baseline V1_1 MATCH (n: User) WHERE n.upvotes > 1000 RETURN n
Executing query: MATCH (n: User) WHERE n.upvotes > 1000 RETURN n
Execution done
Node size is 5139
Edge size is 0
Took 46 ms to execute baseline query
Baseline returned 5139 nodes (or edges)
*********************************
baseline V7_1 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN m
Executing query: MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN m
Execution done
Node size is 77209
Edge size is 0
Took 15239 ms to execute baseline query
Baseline returned 77209 nodes (or edges)
*********************************
baseline V9_1 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN p
Executing query: MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN p
Execution done
Node size is 21463
Edge size is 12094
Took 2195 ms to execute baseline query
Baseline returned 33557 nodes (or edges)
*********************************
baseline V6_1 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
Executing query: MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
Execution done
Node size is 59909
Edge size is 0
Took 11407 ms to execute baseline query
Baseline returned 59909 nodes (or edges)
*********************************
baseline V11_2 MATCH p=(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]->(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]->(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Execution done
Node size is 123738
Edge size is 103050
Took 1041 ms to execute baseline query
Baseline returned 226788 nodes (or edges)
*********************************
baseline V3_1 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN po
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN po
Execution done
Node size is 253189
Edge size is 0
Took 321 ms to execute baseline query
Baseline returned 253189 nodes (or edges)
*********************************
baseline V4_1 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN n
Executing query: MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN n
Execution done
Node size is 21463
Edge size is 0
Took 2200 ms to execute baseline query
Baseline returned 21463 nodes (or edges)
*********************************
baseline V2_1 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 RETURN n
Executing query: MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 RETURN n
Execution done
Node size is 367709
Edge size is 0
Took 2959 ms to execute baseline query
Baseline returned 367709 nodes (or edges)
*********************************
baseline V14_2 MATCH p=(n:User)-[:POSTED]-(po:Post)-[:HAS_TAG]-(t:Tag)-[:HAS_TAG]-(po2:Post)-[:POSTED]-(n) WHERE t.tagId = 'java' OR t.tagId = 'c#' RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post)-[:HAS_TAG]-(t:Tag)-[:HAS_TAG]-(po2:Post)-[:POSTED]-(n) WHERE t.tagId = 'java' OR t.tagId = 'c#' RETURN p
Execution done
Node size is 172792
Edge size is 312509
Took 32797 ms to execute baseline query
Baseline returned 485301 nodes (or edges)
*********************************
baseline V5 MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN betterPost
Executing query: MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN betterPost
Execution done
Node size is 1719664
Edge size is 0
Took 14775 ms to execute baseline query
Baseline returned 1719664 nodes (or edges)
*********************************
baseline V9_2 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN p
Executing query: MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN p
Execution done
Node size is 26418
Edge size is 20003
Took 2705 ms to execute baseline query
Baseline returned 46421 nodes (or edges)
*********************************
baseline V3_2 MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN po
Executing query: MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN po
Execution done
Node size is 111876
Edge size is 0
Took 3501 ms to execute baseline query
Baseline returned 111876 nodes (or edges)
*********************************
baseline V1_2 MATCH (n: User) WHERE n.upvotes > 400 RETURN n
Executing query: MATCH (n: User) WHERE n.upvotes > 400 RETURN n
Execution done
Node size is 12036
Edge size is 0
Took 60 ms to execute baseline query
Baseline returned 12036 nodes (or edges)
*********************************
baseline V14_1 MATCH p=(n:User)-[:POSTED]-(po:Post)-[:HAS_TAG]-(t:Tag)-[:HAS_TAG]-(po2:Post)-[:POSTED]-(n) WHERE t.tagId = 'java' RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post)-[:HAS_TAG]-(t:Tag)-[:HAS_TAG]-(po2:Post)-[:POSTED]-(n) WHERE t.tagId = 'java' RETURN p
Execution done
Node size is 62687
Edge size is 110960
Took 9705 ms to execute baseline query
Baseline returned 173647 nodes (or edges)
*********************************
baseline V1_2 MATCH (n: User) WHERE n.upvotes > 400 RETURN n
Executing query: MATCH (n: User) WHERE n.upvotes > 400 RETURN n
Execution done
Node size is 12036
Edge size is 0
Took 48 ms to execute baseline query
Baseline returned 12036 nodes (or edges)
*********************************
baseline V6_1 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
Executing query: MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
Execution done
Node size is 59909
Edge size is 0
Took 11571 ms to execute baseline query
Baseline returned 59909 nodes (or edges)
*********************************
baseline V12_1 MATCH p=(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN p
Execution done
Node size is 1460732
Edge size is 2274209
Took 24821 ms to execute baseline query
Baseline returned 3734941 nodes (or edges)
*********************************
baseline V4_1 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN n
Executing query: MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN n
Execution done
Node size is 21463
Edge size is 0
Took 2242 ms to execute baseline query
Baseline returned 21463 nodes (or edges)
*********************************
baseline V7_1 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN m
Executing query: MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN m
Execution done
Node size is 77209
Edge size is 0
Took 14853 ms to execute baseline query
Baseline returned 77209 nodes (or edges)
*********************************
baseline V8_1 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN p
Execution done
Node size is 301332
Edge size is 253189
Took 664 ms to execute baseline query
Baseline returned 554521 nodes (or edges)
*********************************
baseline V11_1 MATCH p=(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]->(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]->(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Execution done
Node size is 874164
Edge size is 824709
Took 10054 ms to execute baseline query
Baseline returned 1698873 nodes (or edges)
*********************************
baseline V3_2 MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN po
Executing query: MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN po
Execution done
Node size is 111876
Edge size is 0
Took 3513 ms to execute baseline query
Baseline returned 111876 nodes (or edges)
*********************************
baseline V9_2 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN p
Executing query: MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN p
Execution done
Node size is 26418
Edge size is 20003
Took 2593 ms to execute baseline query
Baseline returned 46421 nodes (or edges)
*********************************
baseline V2_1 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 RETURN n
Executing query: MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 RETURN n
Execution done
Node size is 367709
Edge size is 0
Took 3001 ms to execute baseline query
Baseline returned 367709 nodes (or edges)
*********************************
baseline V6_2 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
Executing query: MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
Execution done
Node size is 25959
Edge size is 0
Took 822 ms to execute baseline query
Baseline returned 25959 nodes (or edges)
*********************************
baseline V7_2 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN m
Executing query: MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN m
Execution done
Node size is 57905
Edge size is 0
Took 13738 ms to execute baseline query
Baseline returned 57905 nodes (or edges)
*********************************
baseline V12_2 MATCH p=(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN p
Execution done
Node size is 1014730
Edge size is 1544095
Took 19092 ms to execute baseline query
Baseline returned 2558825 nodes (or edges)
*********************************
baseline V10 MATCH p=(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Executing query: MATCH p=(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Execution done
Node size is 3624699
Edge size is 2207384
Took 18006 ms to execute baseline query
Baseline returned 5832083 nodes (or edges)
*********************************
baseline V11_2 MATCH p=(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]->(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]->(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN p
Execution done
Node size is 123738
Edge size is 103050
Took 1035 ms to execute baseline query
Baseline returned 226788 nodes (or edges)
*********************************
baseline V9_1 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN p
Executing query: MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN p
Execution done
Node size is 21463
Edge size is 12094
Took 2360 ms to execute baseline query
Baseline returned 33557 nodes (or edges)
*********************************
baseline V5 MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN betterPost
Executing query: MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN betterPost
Execution done
Node size is 1719664
Edge size is 0
Took 14180 ms to execute baseline query
Baseline returned 1719664 nodes (or edges)
*********************************
baseline V1_1 MATCH (n: User) WHERE n.upvotes > 1000 RETURN n
Executing query: MATCH (n: User) WHERE n.upvotes > 1000 RETURN n
Execution done
Node size is 5139
Edge size is 0
Took 46 ms to execute baseline query
Baseline returned 5139 nodes (or edges)
*********************************
baseline V2_2 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 RETURN n
Executing query: MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 RETURN n
Execution done
Node size is 718883
Edge size is 0
Took 3240 ms to execute baseline query
Baseline returned 718883 nodes (or edges)
*********************************
baseline V14_2 MATCH p=(n:User)-[:POSTED]-(po:Post)-[:HAS_TAG]-(t:Tag)-[:HAS_TAG]-(po2:Post)-[:POSTED]-(n) WHERE t.tagId = 'java' OR t.tagId = 'c#' RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post)-[:HAS_TAG]-(t:Tag)-[:HAS_TAG]-(po2:Post)-[:POSTED]-(n) WHERE t.tagId = 'java' OR t.tagId = 'c#' RETURN p
Execution done
Node size is 172792
Edge size is 312509
Took 32412 ms to execute baseline query
Baseline returned 485301 nodes (or edges)
*********************************
baseline V3_1 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN po
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN po
Execution done
Node size is 253189
Edge size is 0
Took 323 ms to execute baseline query
Baseline returned 253189 nodes (or edges)
*********************************
baseline V8_2 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN p
Executing query: MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN p
Execution done
Node size is 138116
Edge size is 111876
Took 3656 ms to execute baseline query
Baseline returned 249992 nodes (or edges)
*********************************
baseline V4_2 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN m
Executing query: MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN m
Execution done
Node size is 7367
Edge size is 0
Took 2553 ms to execute baseline query
Baseline returned 7367 nodes (or edges)
*********************************
