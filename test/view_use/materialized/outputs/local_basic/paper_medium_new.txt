neo4j graph connector set-up done.
1
CREATE VIEW AS V1_1 MATCH (n: User) WHERE n.upvotes > 1000 RETURN n
In enterRoot ctx is CREATE VIEW ASV1_1MATCH(n:User)WHEREn.upvotes>1000RETURNn
ViewSql is CREATE VIEW AS V1_1 MATCH (n: User) WHERE n.upvotes > 1000 RETURN n
VarLables of the input is {n=User}
Return Type is NODE
 MATCH (n: User) WHERE n.upvotes > 1000 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V1_1" IN n.views THEN [] ELSE ["V1_1"] END) + n.views
Transaction execute: 1142 milliseconds
While Loop: 411 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 5139 nodes
Took 1555ms to create views
*********************************
CREATE VIEW AS V1_2 MATCH (n: User) WHERE n.upvotes > 400 RETURN n
In enterRoot ctx is CREATE VIEW ASV1_2MATCH(n:User)WHEREn.upvotes>400RETURNn
ViewSql is CREATE VIEW AS V1_2 MATCH (n: User) WHERE n.upvotes > 400 RETURN n
VarLables of the input is {n=User}
Return Type is NODE
 MATCH (n: User) WHERE n.upvotes > 400 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V1_2" IN n.views THEN [] ELSE ["V1_2"] END) + n.views
Transaction execute: 16 milliseconds
While Loop: 94 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 12036 nodes
Took 117ms to create views
*********************************
CREATE VIEW AS V2_1 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 RETURN n
In enterRoot ctx is CREATE VIEW ASV2_1MATCH(n:Post)WHEREn.score<1500ANDn.score>20RETURNn
ViewSql is CREATE VIEW AS V2_1 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 RETURN n
VarLables of the input is {n=Post}
Return Type is NODE
 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V2_1" IN n.views THEN [] ELSE ["V2_1"] END) + n.views
Transaction execute: 69 milliseconds
While Loop: 32501 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 367709 nodes
Took 32570ms to create views
*********************************
CREATE VIEW AS V2_2 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 RETURN n
In enterRoot ctx is CREATE VIEW ASV2_2MATCH(n:Post)WHEREn.score<1500ANDn.score>10RETURNn
ViewSql is CREATE VIEW AS V2_2 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 RETURN n
VarLables of the input is {n=Post}
Return Type is NODE
 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V2_2" IN n.views THEN [] ELSE ["V2_2"] END) + n.views
Transaction execute: 12 milliseconds
While Loop: 3678 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 718883 nodes
Took 3690ms to create views
*********************************
CREATE VIEW AS V3_1 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN po
In enterRoot ctx is CREATE VIEW ASV3_1MATCHp=(n:User)-[:POSTED]-(po:Post)WHEREn.reputation<850RETURNpo
ViewSql is CREATE VIEW AS V3_1 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN po
VarLables of the input is {_ENTRY_SPECIAL_NO_REL_NAME_1=POSTED, n=User, po=Post}
Return Type is NODE
 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 SET(CASE WHEN NOT EXISTS(po.views) THEN po END).views = [] SET po.views = (CASE WHEN "V3_1" IN po.views THEN [] ELSE ["V3_1"] END) + po.views
Transaction execute: 103 milliseconds
While Loop: 418 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 253189 nodes
Took 523ms to create views
*********************************
CREATE VIEW AS V3_2 MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN po
In enterRoot ctx is CREATE VIEW ASV3_2MATCHp=(n:User)-[:POSTED]-(po:Post)WHEREpo.score>38RETURNpo
ViewSql is CREATE VIEW AS V3_2 MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN po
VarLables of the input is {_ENTRY_SPECIAL_NO_REL_NAME_2=POSTED, n=User, po=Post}
Return Type is NODE
 MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 SET(CASE WHEN NOT EXISTS(po.views) THEN po END).views = [] SET po.views = (CASE WHEN "V3_2" IN po.views THEN [] ELSE ["V3_2"] END) + po.views
Transaction execute: 50 milliseconds
While Loop: 3920 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 111876 nodes
Took 3971ms to create views
*********************************
CREATE VIEW AS V4_1 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN n
In enterRoot ctx is CREATE VIEW ASV4_1MATCHp=(n:Post)-[:PARENT_OF]-(m:Post)WHEREm.score>200ANDn.score>200RETURNn
ViewSql is CREATE VIEW AS V4_1 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN n
VarLables of the input is {_ENTRY_SPECIAL_NO_REL_NAME_3=PARENT_OF, m=Post, n=Post}
Return Type is NODE
 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V4_1" IN n.views THEN [] ELSE ["V4_1"] END) + n.views
Transaction execute: 70 milliseconds
While Loop: 2124 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 21463 nodes
Took 2196ms to create views
*********************************
CREATE VIEW AS V4_2 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN m
In enterRoot ctx is CREATE VIEW ASV4_2MATCHp=(n:Post)-[:PARENT_OF]-(m:Post)WHEREm.score>300ANDm.score<450RETURNm
ViewSql is CREATE VIEW AS V4_2 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN m
VarLables of the input is {_ENTRY_SPECIAL_NO_REL_NAME_4=PARENT_OF, m=Post, n=Post}
Return Type is NODE
 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 SET(CASE WHEN NOT EXISTS(m.views) THEN m END).views = [] SET m.views = (CASE WHEN "V4_2" IN m.views THEN [] ELSE ["V4_2"] END) + m.views
Transaction execute: 57 milliseconds
While Loop: 2704 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 7367 nodes
Took 2762ms to create views
*********************************
CREATE VIEW AS V5 MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN betterPost
In enterRoot ctx is CREATE VIEW ASV5MATCH(betterPost:Post)-[:PARENT_OF]-(worstPost:Post)WHEREworstPost.score<10ANDbetterPost.score>worstPost.score*10RETURNbetterPost
ViewSql is CREATE VIEW AS V5 MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN betterPost
ckqptPost, score
Post, score
VarLables of the input is {worstPost=Post, _ENTRY_SPECIAL_NO_REL_NAME_5=PARENT_OF, betterPost=Post}
Return Type is NODE
 MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 SET(CASE WHEN NOT EXISTS(betterPost.views) THEN betterPost END).views = [] SET betterPost.views = (CASE WHEN "V5" IN betterPost.views THEN [] ELSE ["V5"] END) + betterPost.views
Transaction execute: 67 milliseconds
While Loop: 14008 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 1719664 nodes
Took 14076ms to create views
*********************************
CREATE VIEW AS V6_1 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
In enterRoot ctx is CREATE VIEW ASV6_1MATCH(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post)WHEREworstPost.score<10ANDbetterPost.score>worstPost.score*10RETURNn
ViewSql is CREATE VIEW AS V6_1 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
ckqptPost, score
Post, score
VarLables of the input is {worstPost=Post, n=User, _ENTRY_SPECIAL_NO_REL_NAME_6=POSTED, betterPost=Post, _ENTRY_SPECIAL_NO_REL_NAME_7=PARENT_OF}
Return Type is NODE
 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V6_1" IN n.views THEN [] ELSE ["V6_1"] END) + n.views
Transaction execute: 109 milliseconds
While Loop: 11346 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 59909 nodes
Took 11456ms to create views
*********************************
CREATE VIEW AS V6_2 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
In enterRoot ctx is CREATE VIEW ASV6_2MATCH(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post)WHEREn.reputation<850ANDworstPost.score<10ANDbetterPost.score>worstPost.score*10RETURNn
ViewSql is CREATE VIEW AS V6_2 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
ckqptPost, score
Post, score
VarLables of the input is {worstPost=Post, _ENTRY_SPECIAL_NO_REL_NAME_8=POSTED, _ENTRY_SPECIAL_NO_REL_NAME_9=PARENT_OF, n=User, betterPost=Post}
Return Type is NODE
 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V6_2" IN n.views THEN [] ELSE ["V6_2"] END) + n.views
Transaction execute: 108 milliseconds
While Loop: 966 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 25959 nodes
Took 1075ms to create views
*********************************
CREATE VIEW AS V7_1 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN m
In enterRoot ctx is CREATE VIEW ASV7_1MATCH(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User)WHEREn.userId<m.userIdANDn.reputation>m.reputationRETURNm
ViewSql is CREATE VIEW AS V7_1 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN m
ckqptUser, userId
User, userId
ckqptUser, reputation
User, reputation
VarLables of the input is {p1=Post, p2=Post, _ENTRY_SPECIAL_NO_REL_NAME_10=POSTED, _ENTRY_SPECIAL_NO_REL_NAME_11=PARENT_OF, m=User, n=User}
Return Type is NODE
 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation SET(CASE WHEN NOT EXISTS(m.views) THEN m END).views = [] SET m.views = (CASE WHEN "V7_1" IN m.views THEN [] ELSE ["V7_1"] END) + m.views
Transaction execute: 94 milliseconds
While Loop: 14897 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 77209 nodes
Took 14992ms to create views
*********************************
CREATE VIEW AS V7_2 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN m
In enterRoot ctx is CREATE VIEW ASV7_2MATCH(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User)WHEREn.userId<m.userIdANDp1.score<p2.scoreRETURNm
ViewSql is CREATE VIEW AS V7_2 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN m
ckqptUser, userId
User, userId
ckqptPost, score
Post, score
VarLables of the input is {p1=Post, p2=Post, _ENTRY_SPECIAL_NO_REL_NAME_14=PARENT_OF, _ENTRY_SPECIAL_NO_REL_NAME_13=POSTED, m=User, n=User}
Return Type is NODE
 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score SET(CASE WHEN NOT EXISTS(m.views) THEN m END).views = [] SET m.views = (CASE WHEN "V7_2" IN m.views THEN [] ELSE ["V7_2"] END) + m.views
Transaction execute: 79 milliseconds
While Loop: 14870 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 57905 nodes
Took 14950ms to create views
*********************************
WITH VIEWS V4_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV4_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V4_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
185538
Before calling execute query
Yunjia's method
Took 63 ms to execute transaction
There are 21463 elements in the query
Took 84 ms to process result rows
Took 1 ms to commit transaction
Execution done
After the call to execute query
Took 155ms to use view
*********************************
WITH VIEWS V6_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV6_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V6_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
198685
Before calling execute query
Yunjia's method
Took 13 ms to execute transaction
There are 25959 elements in the query
Took 43 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 61ms to use view
*********************************
WITH VIEWS V3_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV3_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V3_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
2211595
Before calling execute query
Yunjia's method
Took 103 ms to execute transaction
There are 253189 elements in the query
Took 233 ms to process result rows
Took 1 ms to commit transaction
Execution done
After the call to execute query
Took 364ms to use view
*********************************
WITH VIEWS V7_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV7_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V7_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
587743
Before calling execute query
Yunjia's method
Took 21 ms to execute transaction
There are 77209 elements in the query
Took 44 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 76ms to use view
*********************************
WITH VIEWS V2_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV2_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V2_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
6338115
Before calling execute query
Yunjia's method
Took 230 ms to execute transaction
There are 718883 elements in the query
Took 390 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 699ms to use view
*********************************
WITH VIEWS V4_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV4_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V4_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
64106
Before calling execute query
Yunjia's method
Took 44 ms to execute transaction
There are 7367 elements in the query
Took 7 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 67ms to use view
*********************************
WITH VIEWS V5 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV5LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V5 LOCAL MATCH (n) RETURN n
Scope:LOCAL
15326601
Before calling execute query
Yunjia's method
Took 360 ms to execute transaction
There are 1719664 elements in the query
Took 1179 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 1681ms to use view
*********************************
WITH VIEWS V6_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV6_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V6_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
453444
Before calling execute query
Yunjia's method
Took 12 ms to execute transaction
There are 59909 elements in the query
Took 58 ms to process result rows
Took 1 ms to commit transaction
Execution done
After the call to execute query
Took 136ms to use view
*********************************
WITH VIEWS V7_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV7_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V7_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
439132
Before calling execute query
Yunjia's method
Took 12 ms to execute transaction
There are 57905 elements in the query
Took 30 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 49ms to use view
*********************************
WITH VIEWS V1_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV1_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V1_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
38278
Before calling execute query
Yunjia's method
Took 1 ms to execute transaction
There are 5139 elements in the query
Took 3 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 11ms to use view
*********************************
WITH VIEWS V1_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV1_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V1_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
89905
Before calling execute query
Yunjia's method
Took 6 ms to execute transaction
There are 12036 elements in the query
Took 6 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 15ms to use view
*********************************
WITH VIEWS V2_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV2_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V2_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
3234436
Before calling execute query
Yunjia's method
Took 74 ms to execute transaction
There are 367709 elements in the query
Took 208 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 314ms to use view
*********************************
WITH VIEWS V3_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV3_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V3_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
965497
Before calling execute query
Yunjia's method
Took 45 ms to execute transaction
There are 111876 elements in the query
Took 64 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 138ms to use view
*********************************
--------------------------------------
neo4j graph connector set-up done.
1
CREATE VIEW AS V1_1 MATCH (n: User) WHERE n.upvotes > 1000 RETURN n
In enterRoot ctx is CREATE VIEW ASV1_1MATCH(n:User)WHEREn.upvotes>1000RETURNn
ViewSql is CREATE VIEW AS V1_1 MATCH (n: User) WHERE n.upvotes > 1000 RETURN n
VarLables of the input is {n=User}
Return Type is NODE
 MATCH (n: User) WHERE n.upvotes > 1000 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V1_1" IN n.views THEN [] ELSE ["V1_1"] END) + n.views
Transaction execute: 928 milliseconds
While Loop: 303 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 5139 nodes
Took 1269ms to create views
*********************************
CREATE VIEW AS V1_2 MATCH (n: User) WHERE n.upvotes > 400 RETURN n
In enterRoot ctx is CREATE VIEW ASV1_2MATCH(n:User)WHEREn.upvotes>400RETURNn
ViewSql is CREATE VIEW AS V1_2 MATCH (n: User) WHERE n.upvotes > 400 RETURN n
VarLables of the input is {n=User}
Return Type is NODE
 MATCH (n: User) WHERE n.upvotes > 400 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V1_2" IN n.views THEN [] ELSE ["V1_2"] END) + n.views
Transaction execute: 18 milliseconds
While Loop: 87 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 12036 nodes
Took 124ms to create views
*********************************
CREATE VIEW AS V2_1 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 RETURN n
In enterRoot ctx is CREATE VIEW ASV2_1MATCH(n:Post)WHEREn.score<1500ANDn.score>20RETURNn
ViewSql is CREATE VIEW AS V2_1 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 RETURN n
VarLables of the input is {n=Post}
Return Type is NODE
 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V2_1" IN n.views THEN [] ELSE ["V2_1"] END) + n.views
Transaction execute: 113 milliseconds
While Loop: 32686 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 367709 nodes
Took 32799ms to create views
*********************************
CREATE VIEW AS V2_2 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 RETURN n
In enterRoot ctx is CREATE VIEW ASV2_2MATCH(n:Post)WHEREn.score<1500ANDn.score>10RETURNn
ViewSql is CREATE VIEW AS V2_2 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 RETURN n
VarLables of the input is {n=Post}
Return Type is NODE
 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V2_2" IN n.views THEN [] ELSE ["V2_2"] END) + n.views
Transaction execute: 11 milliseconds
While Loop: 3838 milliseconds
Transaction commit Time: 1 milliseconds
Execution done
There are 718883 nodes
Took 3850ms to create views
*********************************
CREATE VIEW AS V3_1 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN po
In enterRoot ctx is CREATE VIEW ASV3_1MATCHp=(n:User)-[:POSTED]-(po:Post)WHEREn.reputation<850RETURNpo
ViewSql is CREATE VIEW AS V3_1 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN po
VarLables of the input is {_ENTRY_SPECIAL_NO_REL_NAME_1=POSTED, n=User, po=Post}
Return Type is NODE
 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 SET(CASE WHEN NOT EXISTS(po.views) THEN po END).views = [] SET po.views = (CASE WHEN "V3_1" IN po.views THEN [] ELSE ["V3_1"] END) + po.views
Transaction execute: 109 milliseconds
While Loop: 529 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 253189 nodes
Took 640ms to create views
*********************************
CREATE VIEW AS V3_2 MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN po
In enterRoot ctx is CREATE VIEW ASV3_2MATCHp=(n:User)-[:POSTED]-(po:Post)WHEREpo.score>38RETURNpo
ViewSql is CREATE VIEW AS V3_2 MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN po
VarLables of the input is {_ENTRY_SPECIAL_NO_REL_NAME_2=POSTED, n=User, po=Post}
Return Type is NODE
 MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 SET(CASE WHEN NOT EXISTS(po.views) THEN po END).views = [] SET po.views = (CASE WHEN "V3_2" IN po.views THEN [] ELSE ["V3_2"] END) + po.views
Transaction execute: 62 milliseconds
While Loop: 3643 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 111876 nodes
Took 3705ms to create views
*********************************
CREATE VIEW AS V4_1 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN n
In enterRoot ctx is CREATE VIEW ASV4_1MATCHp=(n:Post)-[:PARENT_OF]-(m:Post)WHEREm.score>200ANDn.score>200RETURNn
ViewSql is CREATE VIEW AS V4_1 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN n
VarLables of the input is {_ENTRY_SPECIAL_NO_REL_NAME_3=PARENT_OF, m=Post, n=Post}
Return Type is NODE
 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V4_1" IN n.views THEN [] ELSE ["V4_1"] END) + n.views
Transaction execute: 70 milliseconds
While Loop: 2086 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 21463 nodes
Took 2156ms to create views
*********************************
CREATE VIEW AS V4_2 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN m
In enterRoot ctx is CREATE VIEW ASV4_2MATCHp=(n:Post)-[:PARENT_OF]-(m:Post)WHEREm.score>300ANDm.score<450RETURNm
ViewSql is CREATE VIEW AS V4_2 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN m
VarLables of the input is {_ENTRY_SPECIAL_NO_REL_NAME_4=PARENT_OF, m=Post, n=Post}
Return Type is NODE
 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 SET(CASE WHEN NOT EXISTS(m.views) THEN m END).views = [] SET m.views = (CASE WHEN "V4_2" IN m.views THEN [] ELSE ["V4_2"] END) + m.views
Transaction execute: 62 milliseconds
While Loop: 2596 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 7367 nodes
Took 2658ms to create views
*********************************
CREATE VIEW AS V5 MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN betterPost
In enterRoot ctx is CREATE VIEW ASV5MATCH(betterPost:Post)-[:PARENT_OF]-(worstPost:Post)WHEREworstPost.score<10ANDbetterPost.score>worstPost.score*10RETURNbetterPost
ViewSql is CREATE VIEW AS V5 MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN betterPost
ckqptPost, score
Post, score
VarLables of the input is {worstPost=Post, _ENTRY_SPECIAL_NO_REL_NAME_5=PARENT_OF, betterPost=Post}
Return Type is NODE
 MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 SET(CASE WHEN NOT EXISTS(betterPost.views) THEN betterPost END).views = [] SET betterPost.views = (CASE WHEN "V5" IN betterPost.views THEN [] ELSE ["V5"] END) + betterPost.views
Transaction execute: 66 milliseconds
While Loop: 13884 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 1719664 nodes
Took 13950ms to create views
*********************************
CREATE VIEW AS V6_1 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
In enterRoot ctx is CREATE VIEW ASV6_1MATCH(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post)WHEREworstPost.score<10ANDbetterPost.score>worstPost.score*10RETURNn
ViewSql is CREATE VIEW AS V6_1 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
ckqptPost, score
Post, score
VarLables of the input is {worstPost=Post, n=User, _ENTRY_SPECIAL_NO_REL_NAME_6=POSTED, betterPost=Post, _ENTRY_SPECIAL_NO_REL_NAME_7=PARENT_OF}
Return Type is NODE
 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V6_1" IN n.views THEN [] ELSE ["V6_1"] END) + n.views
Transaction execute: 129 milliseconds
While Loop: 11218 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 59909 nodes
Took 11348ms to create views
*********************************
CREATE VIEW AS V6_2 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
In enterRoot ctx is CREATE VIEW ASV6_2MATCH(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post)WHEREn.reputation<850ANDworstPost.score<10ANDbetterPost.score>worstPost.score*10RETURNn
ViewSql is CREATE VIEW AS V6_2 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
ckqptPost, score
Post, score
VarLables of the input is {worstPost=Post, _ENTRY_SPECIAL_NO_REL_NAME_8=POSTED, _ENTRY_SPECIAL_NO_REL_NAME_9=PARENT_OF, n=User, betterPost=Post}
Return Type is NODE
 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V6_2" IN n.views THEN [] ELSE ["V6_2"] END) + n.views
Transaction execute: 97 milliseconds
While Loop: 936 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 25959 nodes
Took 1034ms to create views
*********************************
CREATE VIEW AS V7_1 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN m
In enterRoot ctx is CREATE VIEW ASV7_1MATCH(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User)WHEREn.userId<m.userIdANDn.reputation>m.reputationRETURNm
ViewSql is CREATE VIEW AS V7_1 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN m
ckqptUser, userId
User, userId
ckqptUser, reputation
User, reputation
VarLables of the input is {p1=Post, p2=Post, _ENTRY_SPECIAL_NO_REL_NAME_10=POSTED, _ENTRY_SPECIAL_NO_REL_NAME_11=PARENT_OF, m=User, n=User}
Return Type is NODE
 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation SET(CASE WHEN NOT EXISTS(m.views) THEN m END).views = [] SET m.views = (CASE WHEN "V7_1" IN m.views THEN [] ELSE ["V7_1"] END) + m.views
Transaction execute: 91 milliseconds
While Loop: 14488 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 77209 nodes
Took 14579ms to create views
*********************************
CREATE VIEW AS V7_2 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN m
In enterRoot ctx is CREATE VIEW ASV7_2MATCH(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User)WHEREn.userId<m.userIdANDp1.score<p2.scoreRETURNm
ViewSql is CREATE VIEW AS V7_2 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN m
ckqptUser, userId
User, userId
ckqptPost, score
Post, score
VarLables of the input is {p1=Post, p2=Post, _ENTRY_SPECIAL_NO_REL_NAME_14=PARENT_OF, _ENTRY_SPECIAL_NO_REL_NAME_13=POSTED, m=User, n=User}
Return Type is NODE
 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score SET(CASE WHEN NOT EXISTS(m.views) THEN m END).views = [] SET m.views = (CASE WHEN "V7_2" IN m.views THEN [] ELSE ["V7_2"] END) + m.views
Transaction execute: 77 milliseconds
While Loop: 14662 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 57905 nodes
Took 14740ms to create views
*********************************
WITH VIEWS V4_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV4_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V4_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
64106
Before calling execute query
Yunjia's method
Took 49 ms to execute transaction
There are 7367 elements in the query
Took 49 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 102ms to use view
*********************************
WITH VIEWS V7_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV7_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V7_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
587743
Before calling execute query
Yunjia's method
Took 36 ms to execute transaction
There are 77209 elements in the query
Took 123 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 173ms to use view
*********************************
WITH VIEWS V1_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV1_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V1_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
89905
Before calling execute query
Yunjia's method
Took 5 ms to execute transaction
There are 12036 elements in the query
Took 11 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 22ms to use view
*********************************
WITH VIEWS V2_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV2_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V2_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
6338115
Before calling execute query
Yunjia's method
Took 268 ms to execute transaction
There are 718883 elements in the query
Took 444 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 783ms to use view
*********************************
WITH VIEWS V3_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV3_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V3_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
2211595
Before calling execute query
Yunjia's method
Took 54 ms to execute transaction
There are 253189 elements in the query
Took 191 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 292ms to use view
*********************************
WITH VIEWS V6_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV6_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V6_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
198685
Before calling execute query
Yunjia's method
Took 9 ms to execute transaction
There are 25959 elements in the query
Took 15 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 34ms to use view
*********************************
WITH VIEWS V2_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV2_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V2_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
3234436
Before calling execute query
Yunjia's method
Took 77 ms to execute transaction
There are 367709 elements in the query
Took 222 ms to process result rows
Took 1 ms to commit transaction
Execution done
After the call to execute query
Took 332ms to use view
*********************************
WITH VIEWS V3_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV3_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V3_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
965497
Before calling execute query
Yunjia's method
Took 26 ms to execute transaction
There are 111876 elements in the query
Took 63 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 120ms to use view
*********************************
WITH VIEWS V1_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV1_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V1_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
38278
Before calling execute query
Yunjia's method
Took 7 ms to execute transaction
There are 5139 elements in the query
Took 3 ms to process result rows
Took 1 ms to commit transaction
Execution done
After the call to execute query
Took 16ms to use view
*********************************
WITH VIEWS V6_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV6_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V6_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
453444
Before calling execute query
Yunjia's method
Took 12 ms to execute transaction
There are 59909 elements in the query
Took 29 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 46ms to use view
*********************************
WITH VIEWS V4_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV4_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V4_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
185538
Before calling execute query
Yunjia's method
Took 9 ms to execute transaction
There are 21463 elements in the query
Took 13 ms to process result rows
Took 1 ms to commit transaction
Execution done
After the call to execute query
Took 29ms to use view
*********************************
WITH VIEWS V7_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV7_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V7_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
439132
Before calling execute query
Yunjia's method
Took 12 ms to execute transaction
There are 57905 elements in the query
Took 28 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 45ms to use view
*********************************
WITH VIEWS V5 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV5LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V5 LOCAL MATCH (n) RETURN n
Scope:LOCAL
15326601
Before calling execute query
Yunjia's method
Took 389 ms to execute transaction
There are 1719664 elements in the query
Took 1099 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 1610ms to use view
*********************************
--------------------------------------
neo4j graph connector set-up done.
1
CREATE VIEW AS V1_1 MATCH (n: User) WHERE n.upvotes > 1000 RETURN n
In enterRoot ctx is CREATE VIEW ASV1_1MATCH(n:User)WHEREn.upvotes>1000RETURNn
ViewSql is CREATE VIEW AS V1_1 MATCH (n: User) WHERE n.upvotes > 1000 RETURN n
VarLables of the input is {n=User}
Return Type is NODE
 MATCH (n: User) WHERE n.upvotes > 1000 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V1_1" IN n.views THEN [] ELSE ["V1_1"] END) + n.views
Transaction execute: 1092 milliseconds
While Loop: 1200 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 5139 nodes
Took 2296ms to create views
*********************************
CREATE VIEW AS V1_2 MATCH (n: User) WHERE n.upvotes > 400 RETURN n
In enterRoot ctx is CREATE VIEW ASV1_2MATCH(n:User)WHEREn.upvotes>400RETURNn
ViewSql is CREATE VIEW AS V1_2 MATCH (n: User) WHERE n.upvotes > 400 RETURN n
VarLables of the input is {n=User}
Return Type is NODE
 MATCH (n: User) WHERE n.upvotes > 400 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V1_2" IN n.views THEN [] ELSE ["V1_2"] END) + n.views
Transaction execute: 24 milliseconds
While Loop: 106 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 12036 nodes
Took 153ms to create views
*********************************
CREATE VIEW AS V2_1 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 RETURN n
In enterRoot ctx is CREATE VIEW ASV2_1MATCH(n:Post)WHEREn.score<1500ANDn.score>20RETURNn
ViewSql is CREATE VIEW AS V2_1 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 RETURN n
VarLables of the input is {n=Post}
Return Type is NODE
 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V2_1" IN n.views THEN [] ELSE ["V2_1"] END) + n.views
Transaction execute: 95 milliseconds
While Loop: 34131 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 367709 nodes
Took 34226ms to create views
*********************************
CREATE VIEW AS V2_2 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 RETURN n
In enterRoot ctx is CREATE VIEW ASV2_2MATCH(n:Post)WHEREn.score<1500ANDn.score>10RETURNn
ViewSql is CREATE VIEW AS V2_2 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 RETURN n
VarLables of the input is {n=Post}
Return Type is NODE
 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V2_2" IN n.views THEN [] ELSE ["V2_2"] END) + n.views
Transaction execute: 11 milliseconds
While Loop: 3738 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 718883 nodes
Took 3749ms to create views
*********************************
CREATE VIEW AS V3_1 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN po
In enterRoot ctx is CREATE VIEW ASV3_1MATCHp=(n:User)-[:POSTED]-(po:Post)WHEREn.reputation<850RETURNpo
ViewSql is CREATE VIEW AS V3_1 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN po
VarLables of the input is {_ENTRY_SPECIAL_NO_REL_NAME_1=POSTED, n=User, po=Post}
Return Type is NODE
 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 SET(CASE WHEN NOT EXISTS(po.views) THEN po END).views = [] SET po.views = (CASE WHEN "V3_1" IN po.views THEN [] ELSE ["V3_1"] END) + po.views
Transaction execute: 101 milliseconds
While Loop: 431 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 253189 nodes
Took 535ms to create views
*********************************
CREATE VIEW AS V3_2 MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN po
In enterRoot ctx is CREATE VIEW ASV3_2MATCHp=(n:User)-[:POSTED]-(po:Post)WHEREpo.score>38RETURNpo
ViewSql is CREATE VIEW AS V3_2 MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN po
VarLables of the input is {_ENTRY_SPECIAL_NO_REL_NAME_2=POSTED, n=User, po=Post}
Return Type is NODE
 MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 SET(CASE WHEN NOT EXISTS(po.views) THEN po END).views = [] SET po.views = (CASE WHEN "V3_2" IN po.views THEN [] ELSE ["V3_2"] END) + po.views
Transaction execute: 55 milliseconds
While Loop: 3862 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 111876 nodes
Took 3918ms to create views
*********************************
CREATE VIEW AS V4_1 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN n
In enterRoot ctx is CREATE VIEW ASV4_1MATCHp=(n:Post)-[:PARENT_OF]-(m:Post)WHEREm.score>200ANDn.score>200RETURNn
ViewSql is CREATE VIEW AS V4_1 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN n
VarLables of the input is {_ENTRY_SPECIAL_NO_REL_NAME_3=PARENT_OF, m=Post, n=Post}
Return Type is NODE
 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V4_1" IN n.views THEN [] ELSE ["V4_1"] END) + n.views
Transaction execute: 78 milliseconds
While Loop: 2091 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 21463 nodes
Took 2171ms to create views
*********************************
CREATE VIEW AS V4_2 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN m
In enterRoot ctx is CREATE VIEW ASV4_2MATCHp=(n:Post)-[:PARENT_OF]-(m:Post)WHEREm.score>300ANDm.score<450RETURNm
ViewSql is CREATE VIEW AS V4_2 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN m
VarLables of the input is {_ENTRY_SPECIAL_NO_REL_NAME_4=PARENT_OF, m=Post, n=Post}
Return Type is NODE
 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 SET(CASE WHEN NOT EXISTS(m.views) THEN m END).views = [] SET m.views = (CASE WHEN "V4_2" IN m.views THEN [] ELSE ["V4_2"] END) + m.views
Transaction execute: 58 milliseconds
While Loop: 2656 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 7367 nodes
Took 2714ms to create views
*********************************
CREATE VIEW AS V5 MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN betterPost
In enterRoot ctx is CREATE VIEW ASV5MATCH(betterPost:Post)-[:PARENT_OF]-(worstPost:Post)WHEREworstPost.score<10ANDbetterPost.score>worstPost.score*10RETURNbetterPost
ViewSql is CREATE VIEW AS V5 MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN betterPost
ckqptPost, score
Post, score
VarLables of the input is {worstPost=Post, _ENTRY_SPECIAL_NO_REL_NAME_5=PARENT_OF, betterPost=Post}
Return Type is NODE
 MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 SET(CASE WHEN NOT EXISTS(betterPost.views) THEN betterPost END).views = [] SET betterPost.views = (CASE WHEN "V5" IN betterPost.views THEN [] ELSE ["V5"] END) + betterPost.views
Transaction execute: 65 milliseconds
While Loop: 14253 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 1719664 nodes
Took 14320ms to create views
*********************************
CREATE VIEW AS V6_1 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
In enterRoot ctx is CREATE VIEW ASV6_1MATCH(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post)WHEREworstPost.score<10ANDbetterPost.score>worstPost.score*10RETURNn
ViewSql is CREATE VIEW AS V6_1 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
ckqptPost, score
Post, score
VarLables of the input is {worstPost=Post, n=User, _ENTRY_SPECIAL_NO_REL_NAME_6=POSTED, betterPost=Post, _ENTRY_SPECIAL_NO_REL_NAME_7=PARENT_OF}
Return Type is NODE
 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V6_1" IN n.views THEN [] ELSE ["V6_1"] END) + n.views
Transaction execute: 120 milliseconds
While Loop: 11355 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 59909 nodes
Took 11476ms to create views
*********************************
CREATE VIEW AS V6_2 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
In enterRoot ctx is CREATE VIEW ASV6_2MATCH(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post)WHEREn.reputation<850ANDworstPost.score<10ANDbetterPost.score>worstPost.score*10RETURNn
ViewSql is CREATE VIEW AS V6_2 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
ckqptPost, score
Post, score
VarLables of the input is {worstPost=Post, _ENTRY_SPECIAL_NO_REL_NAME_8=POSTED, _ENTRY_SPECIAL_NO_REL_NAME_9=PARENT_OF, n=User, betterPost=Post}
Return Type is NODE
 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V6_2" IN n.views THEN [] ELSE ["V6_2"] END) + n.views
Transaction execute: 99 milliseconds
While Loop: 967 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 25959 nodes
Took 1068ms to create views
*********************************
CREATE VIEW AS V7_1 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN m
In enterRoot ctx is CREATE VIEW ASV7_1MATCH(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User)WHEREn.userId<m.userIdANDn.reputation>m.reputationRETURNm
ViewSql is CREATE VIEW AS V7_1 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN m
ckqptUser, userId
User, userId
ckqptUser, reputation
User, reputation
VarLables of the input is {p1=Post, p2=Post, _ENTRY_SPECIAL_NO_REL_NAME_10=POSTED, _ENTRY_SPECIAL_NO_REL_NAME_11=PARENT_OF, m=User, n=User}
Return Type is NODE
 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation SET(CASE WHEN NOT EXISTS(m.views) THEN m END).views = [] SET m.views = (CASE WHEN "V7_1" IN m.views THEN [] ELSE ["V7_1"] END) + m.views
Transaction execute: 97 milliseconds
While Loop: 15991 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 77209 nodes
Took 16090ms to create views
*********************************
CREATE VIEW AS V7_2 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN m
In enterRoot ctx is CREATE VIEW ASV7_2MATCH(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User)WHEREn.userId<m.userIdANDp1.score<p2.scoreRETURNm
ViewSql is CREATE VIEW AS V7_2 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN m
ckqptUser, userId
User, userId
ckqptPost, score
Post, score
VarLables of the input is {p1=Post, p2=Post, _ENTRY_SPECIAL_NO_REL_NAME_14=PARENT_OF, _ENTRY_SPECIAL_NO_REL_NAME_13=POSTED, m=User, n=User}
Return Type is NODE
 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score SET(CASE WHEN NOT EXISTS(m.views) THEN m END).views = [] SET m.views = (CASE WHEN "V7_2" IN m.views THEN [] ELSE ["V7_2"] END) + m.views
Transaction execute: 77 milliseconds
While Loop: 14940 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 57905 nodes
Took 15018ms to create views
*********************************
WITH VIEWS V7_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV7_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V7_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
587743
Before calling execute query
Yunjia's method
Took 101 ms to execute transaction
There are 77209 elements in the query
Took 161 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 281ms to use view
*********************************
WITH VIEWS V6_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV6_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V6_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
198685
Before calling execute query
Yunjia's method
Took 9 ms to execute transaction
There are 25959 elements in the query
Took 31 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 47ms to use view
*********************************
WITH VIEWS V4_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV4_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V4_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
185538
Before calling execute query
Yunjia's method
Took 6 ms to execute transaction
There are 21463 elements in the query
Took 24 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 35ms to use view
*********************************
WITH VIEWS V7_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV7_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V7_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
439132
Before calling execute query
Yunjia's method
Took 19 ms to execute transaction
There are 57905 elements in the query
Took 33 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 60ms to use view
*********************************
WITH VIEWS V2_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV2_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V2_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
3234436
Before calling execute query
Yunjia's method
Took 171 ms to execute transaction
There are 367709 elements in the query
Took 242 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 457ms to use view
*********************************
WITH VIEWS V5 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV5LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V5 LOCAL MATCH (n) RETURN n
Scope:LOCAL
15326601
Before calling execute query
Yunjia's method
Took 481 ms to execute transaction
There are 1719664 elements in the query
Took 1289 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 1912ms to use view
*********************************
WITH VIEWS V3_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV3_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V3_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
965497
Before calling execute query
Yunjia's method
Took 85 ms to execute transaction
There are 111876 elements in the query
Took 102 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 257ms to use view
*********************************
WITH VIEWS V3_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV3_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V3_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
2211595
Before calling execute query
Yunjia's method
Took 83 ms to execute transaction
There are 253189 elements in the query
Took 219 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 322ms to use view
*********************************
WITH VIEWS V1_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV1_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V1_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
38278
Before calling execute query
Yunjia's method
Took 16 ms to execute transaction
There are 5139 elements in the query
Took 6 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 26ms to use view
*********************************
WITH VIEWS V4_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV4_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V4_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
64106
Before calling execute query
Yunjia's method
Took 4 ms to execute transaction
There are 7367 elements in the query
Took 8 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 14ms to use view
*********************************
WITH VIEWS V1_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV1_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V1_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
89905
Before calling execute query
Yunjia's method
Took 8 ms to execute transaction
There are 12036 elements in the query
Took 11 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 22ms to use view
*********************************
WITH VIEWS V6_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV6_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V6_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
453444
Before calling execute query
Yunjia's method
Took 22 ms to execute transaction
There are 59909 elements in the query
Took 50 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 80ms to use view
*********************************
WITH VIEWS V2_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV2_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V2_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
6338115
Before calling execute query
Yunjia's method
Took 226 ms to execute transaction
There are 718883 elements in the query
Took 558 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 832ms to use view
*********************************
--------------------------------------
neo4j graph connector set-up done.
1
CREATE VIEW AS V1_1 MATCH (n: User) WHERE n.upvotes > 1000 RETURN n
In enterRoot ctx is CREATE VIEW ASV1_1MATCH(n:User)WHEREn.upvotes>1000RETURNn
ViewSql is CREATE VIEW AS V1_1 MATCH (n: User) WHERE n.upvotes > 1000 RETURN n
VarLables of the input is {n=User}
Return Type is NODE
 MATCH (n: User) WHERE n.upvotes > 1000 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V1_1" IN n.views THEN [] ELSE ["V1_1"] END) + n.views
Transaction execute: 1061 milliseconds
While Loop: 358 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 5139 nodes
Took 1463ms to create views
*********************************
CREATE VIEW AS V1_2 MATCH (n: User) WHERE n.upvotes > 400 RETURN n
In enterRoot ctx is CREATE VIEW ASV1_2MATCH(n:User)WHEREn.upvotes>400RETURNn
ViewSql is CREATE VIEW AS V1_2 MATCH (n: User) WHERE n.upvotes > 400 RETURN n
VarLables of the input is {n=User}
Return Type is NODE
 MATCH (n: User) WHERE n.upvotes > 400 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V1_2" IN n.views THEN [] ELSE ["V1_2"] END) + n.views
Transaction execute: 39 milliseconds
While Loop: 110 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 12036 nodes
Took 149ms to create views
*********************************
CREATE VIEW AS V2_1 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 RETURN n
In enterRoot ctx is CREATE VIEW ASV2_1MATCH(n:Post)WHEREn.score<1500ANDn.score>20RETURNn
ViewSql is CREATE VIEW AS V2_1 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 RETURN n
VarLables of the input is {n=Post}
Return Type is NODE
 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V2_1" IN n.views THEN [] ELSE ["V2_1"] END) + n.views
Transaction execute: 86 milliseconds
While Loop: 37478 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 367709 nodes
Took 37564ms to create views
*********************************
CREATE VIEW AS V2_2 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 RETURN n
In enterRoot ctx is CREATE VIEW ASV2_2MATCH(n:Post)WHEREn.score<1500ANDn.score>10RETURNn
ViewSql is CREATE VIEW AS V2_2 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 RETURN n
VarLables of the input is {n=Post}
Return Type is NODE
 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V2_2" IN n.views THEN [] ELSE ["V2_2"] END) + n.views
Transaction execute: 14 milliseconds
While Loop: 3630 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 718883 nodes
Took 3645ms to create views
*********************************
CREATE VIEW AS V3_1 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN po
In enterRoot ctx is CREATE VIEW ASV3_1MATCHp=(n:User)-[:POSTED]-(po:Post)WHEREn.reputation<850RETURNpo
ViewSql is CREATE VIEW AS V3_1 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN po
VarLables of the input is {_ENTRY_SPECIAL_NO_REL_NAME_1=POSTED, n=User, po=Post}
Return Type is NODE
 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 SET(CASE WHEN NOT EXISTS(po.views) THEN po END).views = [] SET po.views = (CASE WHEN "V3_1" IN po.views THEN [] ELSE ["V3_1"] END) + po.views
Transaction execute: 105 milliseconds
While Loop: 427 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 253189 nodes
Took 533ms to create views
*********************************
CREATE VIEW AS V3_2 MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN po
In enterRoot ctx is CREATE VIEW ASV3_2MATCHp=(n:User)-[:POSTED]-(po:Post)WHEREpo.score>38RETURNpo
ViewSql is CREATE VIEW AS V3_2 MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN po
VarLables of the input is {_ENTRY_SPECIAL_NO_REL_NAME_2=POSTED, n=User, po=Post}
Return Type is NODE
 MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 SET(CASE WHEN NOT EXISTS(po.views) THEN po END).views = [] SET po.views = (CASE WHEN "V3_2" IN po.views THEN [] ELSE ["V3_2"] END) + po.views
Transaction execute: 55 milliseconds
While Loop: 4000 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 111876 nodes
Took 4057ms to create views
*********************************
CREATE VIEW AS V4_1 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN n
In enterRoot ctx is CREATE VIEW ASV4_1MATCHp=(n:Post)-[:PARENT_OF]-(m:Post)WHEREm.score>200ANDn.score>200RETURNn
ViewSql is CREATE VIEW AS V4_1 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN n
VarLables of the input is {_ENTRY_SPECIAL_NO_REL_NAME_3=PARENT_OF, m=Post, n=Post}
Return Type is NODE
 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V4_1" IN n.views THEN [] ELSE ["V4_1"] END) + n.views
Transaction execute: 68 milliseconds
While Loop: 2050 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 21463 nodes
Took 2119ms to create views
*********************************
CREATE VIEW AS V4_2 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN m
In enterRoot ctx is CREATE VIEW ASV4_2MATCHp=(n:Post)-[:PARENT_OF]-(m:Post)WHEREm.score>300ANDm.score<450RETURNm
ViewSql is CREATE VIEW AS V4_2 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN m
VarLables of the input is {_ENTRY_SPECIAL_NO_REL_NAME_4=PARENT_OF, m=Post, n=Post}
Return Type is NODE
 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 SET(CASE WHEN NOT EXISTS(m.views) THEN m END).views = [] SET m.views = (CASE WHEN "V4_2" IN m.views THEN [] ELSE ["V4_2"] END) + m.views
Transaction execute: 58 milliseconds
While Loop: 2625 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 7367 nodes
Took 2684ms to create views
*********************************
CREATE VIEW AS V5 MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN betterPost
In enterRoot ctx is CREATE VIEW ASV5MATCH(betterPost:Post)-[:PARENT_OF]-(worstPost:Post)WHEREworstPost.score<10ANDbetterPost.score>worstPost.score*10RETURNbetterPost
ViewSql is CREATE VIEW AS V5 MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN betterPost
ckqptPost, score
Post, score
VarLables of the input is {worstPost=Post, _ENTRY_SPECIAL_NO_REL_NAME_5=PARENT_OF, betterPost=Post}
Return Type is NODE
 MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 SET(CASE WHEN NOT EXISTS(betterPost.views) THEN betterPost END).views = [] SET betterPost.views = (CASE WHEN "V5" IN betterPost.views THEN [] ELSE ["V5"] END) + betterPost.views
Transaction execute: 66 milliseconds
While Loop: 14072 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 1719664 nodes
Took 14139ms to create views
*********************************
CREATE VIEW AS V6_1 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
In enterRoot ctx is CREATE VIEW ASV6_1MATCH(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post)WHEREworstPost.score<10ANDbetterPost.score>worstPost.score*10RETURNn
ViewSql is CREATE VIEW AS V6_1 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
ckqptPost, score
Post, score
VarLables of the input is {worstPost=Post, n=User, _ENTRY_SPECIAL_NO_REL_NAME_6=POSTED, betterPost=Post, _ENTRY_SPECIAL_NO_REL_NAME_7=PARENT_OF}
Return Type is NODE
 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V6_1" IN n.views THEN [] ELSE ["V6_1"] END) + n.views
Transaction execute: 113 milliseconds
While Loop: 11405 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 59909 nodes
Took 11520ms to create views
*********************************
CREATE VIEW AS V6_2 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
In enterRoot ctx is CREATE VIEW ASV6_2MATCH(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post)WHEREn.reputation<850ANDworstPost.score<10ANDbetterPost.score>worstPost.score*10RETURNn
ViewSql is CREATE VIEW AS V6_2 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
ckqptPost, score
Post, score
VarLables of the input is {worstPost=Post, _ENTRY_SPECIAL_NO_REL_NAME_8=POSTED, _ENTRY_SPECIAL_NO_REL_NAME_9=PARENT_OF, n=User, betterPost=Post}
Return Type is NODE
 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V6_2" IN n.views THEN [] ELSE ["V6_2"] END) + n.views
Transaction execute: 101 milliseconds
While Loop: 1011 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 25959 nodes
Took 1113ms to create views
*********************************
CREATE VIEW AS V7_1 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN m
In enterRoot ctx is CREATE VIEW ASV7_1MATCH(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User)WHEREn.userId<m.userIdANDn.reputation>m.reputationRETURNm
ViewSql is CREATE VIEW AS V7_1 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN m
ckqptUser, userId
User, userId
ckqptUser, reputation
User, reputation
VarLables of the input is {p1=Post, p2=Post, _ENTRY_SPECIAL_NO_REL_NAME_10=POSTED, _ENTRY_SPECIAL_NO_REL_NAME_11=PARENT_OF, m=User, n=User}
Return Type is NODE
 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation SET(CASE WHEN NOT EXISTS(m.views) THEN m END).views = [] SET m.views = (CASE WHEN "V7_1" IN m.views THEN [] ELSE ["V7_1"] END) + m.views
Transaction execute: 87 milliseconds
While Loop: 14653 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 77209 nodes
Took 14742ms to create views
*********************************
CREATE VIEW AS V7_2 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN m
In enterRoot ctx is CREATE VIEW ASV7_2MATCH(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User)WHEREn.userId<m.userIdANDp1.score<p2.scoreRETURNm
ViewSql is CREATE VIEW AS V7_2 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN m
ckqptUser, userId
User, userId
ckqptPost, score
Post, score
VarLables of the input is {p1=Post, p2=Post, _ENTRY_SPECIAL_NO_REL_NAME_14=PARENT_OF, _ENTRY_SPECIAL_NO_REL_NAME_13=POSTED, m=User, n=User}
Return Type is NODE
 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score SET(CASE WHEN NOT EXISTS(m.views) THEN m END).views = [] SET m.views = (CASE WHEN "V7_2" IN m.views THEN [] ELSE ["V7_2"] END) + m.views
Transaction execute: 88 milliseconds
While Loop: 14878 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 57905 nodes
Took 14966ms to create views
*********************************
WITH VIEWS V4_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV4_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V4_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
185538
Before calling execute query
Yunjia's method
Took 77 ms to execute transaction
There are 21463 elements in the query
Took 95 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 181ms to use view
*********************************
WITH VIEWS V6_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV6_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V6_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
198685
Before calling execute query
Yunjia's method
Took 11 ms to execute transaction
There are 25959 elements in the query
Took 37 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 54ms to use view
*********************************
WITH VIEWS V6_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV6_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V6_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
453444
Before calling execute query
Yunjia's method
Took 34 ms to execute transaction
There are 59909 elements in the query
Took 82 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 125ms to use view
*********************************
WITH VIEWS V3_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV3_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V3_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
2211595
Before calling execute query
Yunjia's method
Took 88 ms to execute transaction
There are 253189 elements in the query
Took 217 ms to process result rows
Took 1 ms to commit transaction
Execution done
After the call to execute query
Took 334ms to use view
*********************************
WITH VIEWS V1_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV1_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V1_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
89905
Before calling execute query
Yunjia's method
Took 8 ms to execute transaction
There are 12036 elements in the query
Took 6 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 25ms to use view
*********************************
WITH VIEWS V2_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV2_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V2_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
6338115
Before calling execute query
Yunjia's method
Took 224 ms to execute transaction
There are 718883 elements in the query
Took 386 ms to process result rows
Took 1 ms to commit transaction
Execution done
After the call to execute query
Took 682ms to use view
*********************************
WITH VIEWS V5 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV5LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V5 LOCAL MATCH (n) RETURN n
Scope:LOCAL
15326601
Before calling execute query
Yunjia's method
Took 365 ms to execute transaction
There are 1719664 elements in the query
Took 1168 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 1670ms to use view
*********************************
WITH VIEWS V2_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV2_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V2_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
3234436
Before calling execute query
Yunjia's method
Took 80 ms to execute transaction
There are 367709 elements in the query
Took 203 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 383ms to use view
*********************************
WITH VIEWS V1_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV1_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V1_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
38278
Before calling execute query
Yunjia's method
Took 40 ms to execute transaction
There are 5139 elements in the query
Took 6 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 49ms to use view
*********************************
WITH VIEWS V3_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV3_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V3_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
965497
Before calling execute query
Yunjia's method
Took 25 ms to execute transaction
There are 111876 elements in the query
Took 63 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 98ms to use view
*********************************
WITH VIEWS V7_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV7_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V7_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
587743
Before calling execute query
Yunjia's method
Took 34 ms to execute transaction
There are 77209 elements in the query
Took 66 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 111ms to use view
*********************************
WITH VIEWS V4_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV4_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V4_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
64106
Before calling execute query
Yunjia's method
Took 3 ms to execute transaction
There are 7367 elements in the query
Took 8 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 16ms to use view
*********************************
WITH VIEWS V7_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV7_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V7_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
439132
Before calling execute query
Yunjia's method
Took 21 ms to execute transaction
There are 57905 elements in the query
Took 48 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 77ms to use view
*********************************
--------------------------------------
neo4j graph connector set-up done.
1
CREATE VIEW AS V1_1 MATCH (n: User) WHERE n.upvotes > 1000 RETURN n
In enterRoot ctx is CREATE VIEW ASV1_1MATCH(n:User)WHEREn.upvotes>1000RETURNn
ViewSql is CREATE VIEW AS V1_1 MATCH (n: User) WHERE n.upvotes > 1000 RETURN n
VarLables of the input is {n=User}
Return Type is NODE
 MATCH (n: User) WHERE n.upvotes > 1000 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V1_1" IN n.views THEN [] ELSE ["V1_1"] END) + n.views
Transaction execute: 1080 milliseconds
While Loop: 290 milliseconds
Transaction commit Time: 1 milliseconds
Execution done
There are 5139 nodes
Took 1409ms to create views
*********************************
CREATE VIEW AS V1_2 MATCH (n: User) WHERE n.upvotes > 400 RETURN n
In enterRoot ctx is CREATE VIEW ASV1_2MATCH(n:User)WHEREn.upvotes>400RETURNn
ViewSql is CREATE VIEW AS V1_2 MATCH (n: User) WHERE n.upvotes > 400 RETURN n
VarLables of the input is {n=User}
Return Type is NODE
 MATCH (n: User) WHERE n.upvotes > 400 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V1_2" IN n.views THEN [] ELSE ["V1_2"] END) + n.views
Transaction execute: 18 milliseconds
While Loop: 102 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 12036 nodes
Took 130ms to create views
*********************************
CREATE VIEW AS V2_1 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 RETURN n
In enterRoot ctx is CREATE VIEW ASV2_1MATCH(n:Post)WHEREn.score<1500ANDn.score>20RETURNn
ViewSql is CREATE VIEW AS V2_1 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 RETURN n
VarLables of the input is {n=Post}
Return Type is NODE
 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 20 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V2_1" IN n.views THEN [] ELSE ["V2_1"] END) + n.views
Transaction execute: 85 milliseconds
While Loop: 22988 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 367709 nodes
Took 23073ms to create views
*********************************
CREATE VIEW AS V2_2 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 RETURN n
In enterRoot ctx is CREATE VIEW ASV2_2MATCH(n:Post)WHEREn.score<1500ANDn.score>10RETURNn
ViewSql is CREATE VIEW AS V2_2 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 RETURN n
VarLables of the input is {n=Post}
Return Type is NODE
 MATCH (n:Post) WHERE n.score < 1500 AND n.score > 10 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V2_2" IN n.views THEN [] ELSE ["V2_2"] END) + n.views
Transaction execute: 12 milliseconds
While Loop: 3603 milliseconds
Transaction commit Time: 1 milliseconds
Execution done
There are 718883 nodes
Took 3616ms to create views
*********************************
CREATE VIEW AS V3_1 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN po
In enterRoot ctx is CREATE VIEW ASV3_1MATCHp=(n:User)-[:POSTED]-(po:Post)WHEREn.reputation<850RETURNpo
ViewSql is CREATE VIEW AS V3_1 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 RETURN po
VarLables of the input is {_ENTRY_SPECIAL_NO_REL_NAME_1=POSTED, n=User, po=Post}
Return Type is NODE
 MATCH p=(n:User)-[:POSTED]-(po:Post) WHERE n.reputation < 850 SET(CASE WHEN NOT EXISTS(po.views) THEN po END).views = [] SET po.views = (CASE WHEN "V3_1" IN po.views THEN [] ELSE ["V3_1"] END) + po.views
Transaction execute: 107 milliseconds
While Loop: 439 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 253189 nodes
Took 547ms to create views
*********************************
CREATE VIEW AS V3_2 MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN po
In enterRoot ctx is CREATE VIEW ASV3_2MATCHp=(n:User)-[:POSTED]-(po:Post)WHEREpo.score>38RETURNpo
ViewSql is CREATE VIEW AS V3_2 MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 RETURN po
VarLables of the input is {_ENTRY_SPECIAL_NO_REL_NAME_2=POSTED, n=User, po=Post}
Return Type is NODE
 MATCH p = (n:User)-[:POSTED]-(po:Post) WHERE po.score > 38 SET(CASE WHEN NOT EXISTS(po.views) THEN po END).views = [] SET po.views = (CASE WHEN "V3_2" IN po.views THEN [] ELSE ["V3_2"] END) + po.views
Transaction execute: 54 milliseconds
While Loop: 3915 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 111876 nodes
Took 3970ms to create views
*********************************
CREATE VIEW AS V4_1 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN n
In enterRoot ctx is CREATE VIEW ASV4_1MATCHp=(n:Post)-[:PARENT_OF]-(m:Post)WHEREm.score>200ANDn.score>200RETURNn
ViewSql is CREATE VIEW AS V4_1 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 RETURN n
VarLables of the input is {_ENTRY_SPECIAL_NO_REL_NAME_3=PARENT_OF, m=Post, n=Post}
Return Type is NODE
 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 200 AND n.score > 200 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V4_1" IN n.views THEN [] ELSE ["V4_1"] END) + n.views
Transaction execute: 74 milliseconds
While Loop: 2096 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 21463 nodes
Took 2171ms to create views
*********************************
CREATE VIEW AS V4_2 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN m
In enterRoot ctx is CREATE VIEW ASV4_2MATCHp=(n:Post)-[:PARENT_OF]-(m:Post)WHEREm.score>300ANDm.score<450RETURNm
ViewSql is CREATE VIEW AS V4_2 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 RETURN m
VarLables of the input is {_ENTRY_SPECIAL_NO_REL_NAME_4=PARENT_OF, m=Post, n=Post}
Return Type is NODE
 MATCH p=(n:Post)-[:PARENT_OF]-(m:Post) WHERE m.score > 300 AND m.score < 450 SET(CASE WHEN NOT EXISTS(m.views) THEN m END).views = [] SET m.views = (CASE WHEN "V4_2" IN m.views THEN [] ELSE ["V4_2"] END) + m.views
Transaction execute: 57 milliseconds
While Loop: 2656 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 7367 nodes
Took 2714ms to create views
*********************************
CREATE VIEW AS V5 MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN betterPost
In enterRoot ctx is CREATE VIEW ASV5MATCH(betterPost:Post)-[:PARENT_OF]-(worstPost:Post)WHEREworstPost.score<10ANDbetterPost.score>worstPost.score*10RETURNbetterPost
ViewSql is CREATE VIEW AS V5 MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN betterPost
ckqptPost, score
Post, score
VarLables of the input is {worstPost=Post, _ENTRY_SPECIAL_NO_REL_NAME_5=PARENT_OF, betterPost=Post}
Return Type is NODE
 MATCH (betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 SET(CASE WHEN NOT EXISTS(betterPost.views) THEN betterPost END).views = [] SET betterPost.views = (CASE WHEN "V5" IN betterPost.views THEN [] ELSE ["V5"] END) + betterPost.views
Transaction execute: 63 milliseconds
While Loop: 13867 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 1719664 nodes
Took 13932ms to create views
*********************************
CREATE VIEW AS V6_1 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
In enterRoot ctx is CREATE VIEW ASV6_1MATCH(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post)WHEREworstPost.score<10ANDbetterPost.score>worstPost.score*10RETURNn
ViewSql is CREATE VIEW AS V6_1 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
ckqptPost, score
Post, score
VarLables of the input is {worstPost=Post, n=User, _ENTRY_SPECIAL_NO_REL_NAME_6=POSTED, betterPost=Post, _ENTRY_SPECIAL_NO_REL_NAME_7=PARENT_OF}
Return Type is NODE
 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE worstPost.score < 10 AND betterPost.score > worstPost.score * 10 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V6_1" IN n.views THEN [] ELSE ["V6_1"] END) + n.views
Transaction execute: 102 milliseconds
While Loop: 11257 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 59909 nodes
Took 11360ms to create views
*********************************
CREATE VIEW AS V6_2 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
In enterRoot ctx is CREATE VIEW ASV6_2MATCH(n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post)WHEREn.reputation<850ANDworstPost.score<10ANDbetterPost.score>worstPost.score*10RETURNn
ViewSql is CREATE VIEW AS V6_2 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 RETURN n
ckqptPost, score
Post, score
VarLables of the input is {worstPost=Post, _ENTRY_SPECIAL_NO_REL_NAME_8=POSTED, _ENTRY_SPECIAL_NO_REL_NAME_9=PARENT_OF, n=User, betterPost=Post}
Return Type is NODE
 MATCH (n:User)-[:POSTED]-(betterPost:Post)-[:PARENT_OF]-(worstPost:Post) WHERE n.reputation < 850 AND worstPost.score < 10 AND betterPost.score > worstPost.score * 10 SET(CASE WHEN NOT EXISTS(n.views) THEN n END).views = [] SET n.views = (CASE WHEN "V6_2" IN n.views THEN [] ELSE ["V6_2"] END) + n.views
Transaction execute: 110 milliseconds
While Loop: 938 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 25959 nodes
Took 1048ms to create views
*********************************
CREATE VIEW AS V7_1 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN m
In enterRoot ctx is CREATE VIEW ASV7_1MATCH(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User)WHEREn.userId<m.userIdANDn.reputation>m.reputationRETURNm
ViewSql is CREATE VIEW AS V7_1 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation RETURN m
ckqptUser, userId
User, userId
ckqptUser, reputation
User, reputation
VarLables of the input is {p1=Post, p2=Post, _ENTRY_SPECIAL_NO_REL_NAME_10=POSTED, _ENTRY_SPECIAL_NO_REL_NAME_11=PARENT_OF, m=User, n=User}
Return Type is NODE
 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND n.reputation>m.reputation SET(CASE WHEN NOT EXISTS(m.views) THEN m END).views = [] SET m.views = (CASE WHEN "V7_1" IN m.views THEN [] ELSE ["V7_1"] END) + m.views
Transaction execute: 91 milliseconds
While Loop: 15604 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 77209 nodes
Took 15696ms to create views
*********************************
CREATE VIEW AS V7_2 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN m
In enterRoot ctx is CREATE VIEW ASV7_2MATCH(n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User)WHEREn.userId<m.userIdANDp1.score<p2.scoreRETURNm
ViewSql is CREATE VIEW AS V7_2 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score RETURN m
ckqptUser, userId
User, userId
ckqptPost, score
Post, score
VarLables of the input is {p1=Post, p2=Post, _ENTRY_SPECIAL_NO_REL_NAME_14=PARENT_OF, _ENTRY_SPECIAL_NO_REL_NAME_13=POSTED, m=User, n=User}
Return Type is NODE
 MATCH (n:User)-[:POSTED]-(p1:Post)-[:PARENT_OF]-(p2:Post)-[:POSTED]-(m:User) WHERE n.userId<m.userId AND p1.score < p2.score SET(CASE WHEN NOT EXISTS(m.views) THEN m END).views = [] SET m.views = (CASE WHEN "V7_2" IN m.views THEN [] ELSE ["V7_2"] END) + m.views
Transaction execute: 79 milliseconds
While Loop: 14732 milliseconds
Transaction commit Time: 0 milliseconds
Execution done
There are 57905 nodes
Took 14812ms to create views
*********************************
WITH VIEWS V1_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV1_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V1_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
89905
Before calling execute query
Yunjia's method
Took 57 ms to execute transaction
There are 12036 elements in the query
Took 71 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 133ms to use view
*********************************
WITH VIEWS V4_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV4_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V4_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
185538
Before calling execute query
Yunjia's method
Took 12 ms to execute transaction
There are 21463 elements in the query
Took 38 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 56ms to use view
*********************************
WITH VIEWS V7_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV7_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V7_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
587743
Before calling execute query
Yunjia's method
Took 29 ms to execute transaction
There are 77209 elements in the query
Took 72 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 112ms to use view
*********************************
WITH VIEWS V5 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV5LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V5 LOCAL MATCH (n) RETURN n
Scope:LOCAL
15326601
Before calling execute query
Yunjia's method
Took 547 ms to execute transaction
There are 1719664 elements in the query
Took 1253 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 1954ms to use view
*********************************
WITH VIEWS V2_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV2_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V2_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
3234436
Before calling execute query
Yunjia's method
Took 82 ms to execute transaction
There are 367709 elements in the query
Took 236 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 384ms to use view
*********************************
WITH VIEWS V2_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV2_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V2_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
6338115
Before calling execute query
Yunjia's method
Took 163 ms to execute transaction
There are 718883 elements in the query
Took 477 ms to process result rows
Took 1 ms to commit transaction
Execution done
After the call to execute query
Took 691ms to use view
*********************************
WITH VIEWS V3_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV3_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V3_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
2211595
Before calling execute query
Yunjia's method
Took 55 ms to execute transaction
There are 253189 elements in the query
Took 149 ms to process result rows
Took 1 ms to commit transaction
Execution done
After the call to execute query
Took 266ms to use view
*********************************
WITH VIEWS V1_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV1_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V1_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
38278
Before calling execute query
Yunjia's method
Took 16 ms to execute transaction
There are 5139 elements in the query
Took 4 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 28ms to use view
*********************************
WITH VIEWS V6_1 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV6_1LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V6_1 LOCAL MATCH (n) RETURN n
Scope:LOCAL
453444
Before calling execute query
Yunjia's method
Took 13 ms to execute transaction
There are 59909 elements in the query
Took 32 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 50ms to use view
*********************************
WITH VIEWS V3_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV3_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V3_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
965497
Before calling execute query
Yunjia's method
Took 25 ms to execute transaction
There are 111876 elements in the query
Took 66 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 100ms to use view
*********************************
WITH VIEWS V7_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV7_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V7_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
439132
Before calling execute query
Yunjia's method
Took 16 ms to execute transaction
There are 57905 elements in the query
Took 32 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 59ms to use view
*********************************
WITH VIEWS V6_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV6_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V6_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
198685
Before calling execute query
Yunjia's method
Took 6 ms to execute transaction
There are 25959 elements in the query
Took 24 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 36ms to use view
*********************************
WITH VIEWS V4_2 LOCAL MATCH (n) RETURN n
In enterRoot ctx is WITH VIEWSV4_2LOCALMATCH(n)RETURNn
VarLables of the input is {}
Return Type is DEFAULT
FullQuery:: MATCH  (n) RETURN n
cmd:: WITH VIEWS V4_2 LOCAL MATCH (n) RETURN n
Scope:LOCAL
64106
Before calling execute query
Yunjia's method
Took 3 ms to execute transaction
There are 7367 elements in the query
Took 5 ms to process result rows
Took 0 ms to commit transaction
Execution done
After the call to execute query
Took 11ms to use view
*********************************
--------------------------------------
