CALL apoc.periodic.iterate("MATCH p=(c:Message)-[r1:REPLY_OF]->(m:Message)<-[r2:LIKES]-(s:Person) WHERE c.browserUsed = m.browserUsed RETURN DISTINCT collect(id(r1)) AS paths1,collect(id(r2)) AS paths2,p,c,m,s","MERGE (v:View {ViewName:'V11_3'}) SET v.p1 = paths1 SET v.p2 = paths2 SET c.V11_3='c' SET m.V11_3='m' SET s.V11_3='s'", {batchSize:1000, iterateList:true, parallel:false})
CALL apoc.periodic.iterate("MATCH p=(c:Message)-[r1:REPLY_OF]->(m:Message)<-[r2:LIKES]-(s:Person) WHERE c.browserUsed = m.browserUsed AND s.gender = 'male' RETURN DISTINCT collect(id(r1)) AS paths1,collect(id(r2)) AS paths2,p,c,m,s","MERGE (v:View {ViewName:'V11_4'}) SET v.p1= CASE WHEN v.p1 IS NOT NULL THEN  v.p1 + paths1 ELSE paths1 END SET v.p2= CASE WHEN v.p2 IS NOT NULL THEN  v.p2 + paths2 ELSE paths2 END SET c.V11_4='c' SET m.V11_4='m' SET s.V11_4='s'", {batchSize:10000, iterateList:true, parallel:false})


MATCH p1=(c:Message)-[r1:REPLY_OF]->(m:Message),p2=(m)<-[r2:LIKES]-(s:Person) WHERE c.browserUsed = m.browserUsed WITH collect(id(r1)) AS paths1,collect(id(r2)) AS paths2,collect(id(r1)) + collect(id(r2)) AS paths,count(p) AS num,collect(c)+collect(m)+collect(s) AS allnodes MERGE (v:View {ViewName:'V11_3'}) SET v.PATHS = paths SET v.p1 = paths1 SET v.p2 = paths2 WITH num, allnodes UNWIND allnodes AS eachNode SET eachNode.ViewName = CASE WHEN eachNode.ViewName IS NOT NULL THEN eachNode.ViewName + "V11_3" ELSE ["V11_3"] END  RETURN num
MATCH p1=(c:Message)-[r1:REPLY_OF]->(m:Message),p2=(m)<-[r2:LIKES]-(s:Person) WHERE c.browserUsed = m.browserUsed AND  s.gender = "male" WITH collect(id(r1)) AS paths1,collect(id(r2)) AS paths2,collect(id(r1)) + collect(id(r2)) AS paths,count(p) AS num,collect(c)+collect(m)+collect(s) AS allnodes MERGE (v:View {ViewName:'V11_4'}) SET v.PATHS = paths SET v.p1 = paths1 SET v.p2 = paths2 WITH num, allnodes UNWIND allnodes AS eachNode SET eachNode.ViewName = CASE WHEN eachNode.ViewName IS NOT NULL THEN eachNode.ViewName + "V11_4" ELSE ["V11_4"] END  RETURN num
MATCH p=(c:Message)-[r1:HAS_CREATOR]->(s:Person),p2=(s)-[r2:KNOWS]-(t:Person)<-[r3:HAS_CREATOR]-(b:Message) WHERE s.birthday < t.birthday+ 1000000000 AND  s.birthday > t.birthday-1000000000 AND c.creationDate < b.creationDate+10000000000 WITH collect(id(r1)) AS paths1,collect(id(r2)+'-'+id(r3)) AS paths2, paths1 + paths2 AS paths, count(p) AS num,collect(c)+collect(s)+collect(t)+collect(b) AS allnodes MERGE (v:View {ViewName:'V12_4'}) SET v.PATHS = paths SET v.p1 = paths1 SET v.p2 = paths2 WITH num, allnodes UNWIND allnodes AS eachNode SET eachNode.ViewName = CASE WHEN eachNode.ViewName IS NOT NULL THEN eachNode.ViewName + "V12_4" ELSE ["V12_4"] END RETURN num
MATCH p=(c:Message)-[r1:HAS_CREATOR]->(s:Person)-[r2:KNOWS]-(t:Person),p2=(t)<-[r3:HAS_CREATOR]-(b:Message) WHERE s.birthday < t.birthday+ 1000000000 AND  s.birthday > t.birthday-1000000000 AND c.creationDate < b.creationDate+10000000000 WITH collect(id(r1)+'-'+id(r2)) AS paths1,collect(id(r3)) AS paths2, paths1 + paths2 AS paths, count(p) AS num,collect(c)+collect(s)+collect(t)+collect(b) AS allnodes MERGE (v:View {ViewName:'V12_5'}) SET v.PATHS = paths SET v.p1 = paths1 SET v.p2 = paths2 WITH num, allnodes UNWIND allnodes AS eachNode SET eachNode.ViewName = CASE WHEN eachNode.ViewName IS NOT NULL THEN eachNode.ViewName + "V12_5" ELSE ["V12_5"] END RETURN num
MATCH p1=(c:Message)-[r1:REPLY_OF]->(m:Message),p2=(m)<-[r2:LIKES]-(s:Person)<-[r3:HAS_CREATOR]-(c) WHERE  s.gender='male'  WITH collect(id(r1)) AS paths1,collect(id(r2)+'-'+id(r3)) AS paths2, paths1 + paths2 AS paths, count(p) AS num,collect(c)+collect(s)+collect(t)+collect(b) AS allnodes MERGE (v:View {ViewName:'V14_3'}) SET v.PATHS = paths SET v.p1 = paths1 SET v.p2 = paths2 WITH num, allnodes UNWIND allnodes AS eachNode SET eachNode.ViewName = CASE WHEN eachNode.ViewName IS NOT NULL THEN eachNode.ViewName + "V14_3" ELSE ["V14_3"] END RETURN num
MATCH p1=(c:Message)-[r1:REPLY_OF]->(m:Message),p2=(m)<-[r2:LIKES]-(s:Person)<-[r3:HAS_CREATOR]-(c) WHERE  m.browserUsed='Safari' OR m.browserUsed='Internet Explorer'  WITH collect(id(r1)) AS paths1,collect(id(r2)+'-'+id(r3)) AS paths2, paths1 + paths2 AS paths, count(p) AS num,collect(c)+collect(s)+collect(t)+collect(b) AS allnodes MERGE (v:View {ViewName:'V14_4'}) SET v.PATHS = paths SET v.p1 = paths1 SET v.p2 = paths2 WITH num, allnodes UNWIND allnodes AS eachNode SET eachNode.ViewName = CASE WHEN eachNode.ViewName IS NOT NULL THEN eachNode.ViewName + "V14_4" ELSE ["V14_4"] END RETURN num
MATCH (f:Forum)-[r:CONTAINER_OF]->(po:Post) WHERE f.creationDate<1265000000000 SET r.ViewName = CASE WHEN r.ViewName IS NOT NULL THEN r.ViewName + "V15_1" ELSE ["V15_1"] END RETURN r
MATCH (f:Forum)-[r:CONTAINER_OF]->(po:Post) WHERE po.language = "ar" AND f.title STARTS WITH "Wall" SET r.ViewName = CASE WHEN r.ViewName IS NOT NULL THEN r.ViewName + "V16_1" ELSE ["V16_1"] END RETURN r
MATCH (c:Message)-[r1:REPLY_OF]->(m:Message) WHERE c.browserUsed = m.browserUsed SET r1.ViewName = CASE WHEN r.ViewName IS NOT NULL THEN r.ViewName + "V17_1" ELSE ["V17_1"] END RETURN r1
MATCH (c:Message)-[r1:REPLY_OF]->(m:Message)<-[r2:LIKES]-(s:Person) WHERE c.browserUsed = m.browserUsed SET r1.ViewName = CASE WHEN po.ViewName IS NOT NULL THEN po.ViewName + "V18_1" ELSE ["V18_1"] END Set r1.V18_1 = 'r1' SET r2.ViewName = CASE WHEN po.ViewName IS NOT NULL THEN f.ViewName + "V18_1" ELSE ["V18_1"] END Set r2.V18_1 = 'r2' RETURN r1,r2
MATCH (c:Message)-[r1:REPLY_OF]->(m:Message)<-[r2:LIKES]-(s:Person) WHERE c.browserUsed = m.browserUsed AND s.gender = "male" SET r1.ViewName = CASE WHEN r1.ViewName IS NOT NULL THEN r1.ViewName + "V18_2" ELSE ["V18_2"] END Set r1.V18_2 = 'r1' SET r2.ViewName = CASE WHEN r2.ViewName IS NOT NULL THEN r2.ViewName + "V18_2" ELSE ["V18_2"] END Set r2.V18_2 = 'r2' RETURN r1,r2
MATCH (c:Message)-[r1:HAS_CREATOR]->(s:Person)-[r2:KNOWS]-(t:Person)<-[r3:HAS_CREATOR]-(b:Message) WHERE s.birthday < t.birthday+ 1000000000 AND  s.birthday > t.birthday-1000000000 AND c.creationDate < b.creationDate+10000000000 SET r1.ViewName = CASE WHEN r1.ViewName IS NOT NULL THEN r1.ViewName + "V19_2" ELSE ["V19_2"] END Set r1.V19_2 = 'r1' SET r2.ViewName = CASE WHEN r2.ViewName IS NOT NULL THEN r2.ViewName + "V19_2" ELSE ["V19_2"] END Set r2.V19_2 = 'r2' SET r3.ViewName = CASE WHEN r3.ViewName IS NOT NULL THEN r3.ViewName + "V19_2" ELSE ["V19_2"] END Set r3.V19_2 = 'r3'  RETURN r1,r2,r3

//usage
M1: MATCH (s:Person)<-[:HAS_CREATOR]-(m:Message) WHERE m.V11_3 IS NOT NULL RETURN DISTINCT s
MATCH (v:View) WHERE v.ViewName= 'V11_4' UNWIND v.p1 AS idR1 MATCH p=(c:Message)-[r1:REPLY_OF]->(m:Message)  WHERE id(r1)=idR1 AND m.language = "ar" RETURN DISTINCT c
MATCH (v:View) WHERE v.Name = 'V12_5' UNWIND v.p2 AS path WITH SPLIT(path, '-') AS idPair, v WITH TOINTEGER(idPair[0]) AS idR1, TOINTEGER(idPair[1]) AS idR2 MATCH p=(c:Message)-[r1:HAS_CREATOR]->(s:Person)-[r2:KNOWS]-(t:Person) WHERE  id(r1) = idR1 AND id(r2) = idR2 AND s.gender='female' RETURN DISTINCT p
MATCH (v:View) WHERE v.Name = 'V14_3' UNWIND v.p1 AS idR1, v.p2 AS idR2 MATCH p1=(c:Message)-[r1:REPLY_OF]->(m:Message) WHERE id(r1) = idR1 WITH m,c,idR2 MATCH p2=(m)<-[:LIKES]-(s:Person)<-[r2:HAS_CREATOR]-(c) WHERE id(r2)=idR2 WITH s MATCH (s)<-[:HAS_MODERATOR]-(f:Forum) RETURN DISTINCT f
MATCH (v:View) WHERE v.Name = 'V14_4' UNWIND v.p1 AS idR1 MATCH p1=(c:Message)-[r1:REPLY_OF]->(m:Message) WHERE id(r1)=idR1 AND m.language = "ar" WITH m,c,v UNWIND v.p2 AS path2 WITH SPLIT(path2, '-') AS idPair2, v WITH TOINTEGER(idPair2[0]) AS idR2, TOINTEGER(idPair2[1]) AS idR3 MATCH p2=(m)<-[r2:LIKES]-(s:Person)<-[r3:HAS_CREATOR]-(c) WHERE id(r2)=idR2 AND id(r3)=idR3 WITH s MATCH (s)<-[:HAS_MODERATOR]-(f:Forum) RETURN DISTINCT f
MATCH (v:View) WHERE v.Name = 'V14_4' UNWIND v.p1 AS idR1 MATCH p1=(c:Message)-[r1:REPLY_OF]->(m:Message) WHERE id(r1)=idR1 AND m.language = "ar" WITH m,c,v UNWIND v.p2 AS path2 WITH SPLIT(path2, '-') AS idPair2, v WITH TOINTEGER(idPair2[0]) AS idR2, TOINTEGER(idPair2[1]) AS idR3 MATCH p2=(m)<-[r2:LIKES]-(s:Person)<-[r3:HAS_CREATOR]-(c) WHERE id(r2)=idR2 AND id(r3)=idR3 WITH s MATCH (s)<-[r4:HAS_MODERATOR]-(f:Forum) RETURN DISTINCT r4
